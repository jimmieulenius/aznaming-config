{
  "$id": "default.templates",
  "default": {
    "$id": "default.templates.default",
    "properties": {
      "name": "default",
      "shortName": "default",
      "template": "{RESOURCE_TYPE}[{-}]{WORKLOAD}[{-}]{ENVIRONMENT}[{-}]{REGION}[{-}{INSTANCE}]",
      "lengthMax": 1024,
      "lengthMin": 1,
      "casing": "none",
      "values": {
        "SEPARATOR": "-"
      },
      "validText": "",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "",
      "staticValue": ""
    }
  },
  "AnalysisServices/servers": {
    "$id": "default.templates.analysisservices/servers",
    "properties": {
      "name": "AnalysisServices/servers",
      "shortName": "as",
      "lengthMax": 63,
      "lengthMin": 3,
      "casing": "lower",
      "validText": "Lowercase letters and numbers. Start with lowercase letter.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-z][a-z0-9]{2,62}$",
      "staticValue": "",
      "values": {
        "SEPARATOR": null
      }
    }
  },
  "ApiManagement/service": {
    "$id": "default.templates.apimanagement/service",
    "properties": {
      "name": "ApiManagement/service",
      "shortName": "apim",
      "lengthMax": 50,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, and hyphens. Start with letter, and end with alphanumeric.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z]|[a-zA-Z][a-zA-Z0-9-]{0,48}[a-zA-Z0-9])$",
      "staticValue": ""
    }
  },
  "ApiManagement/service/api-version-sets": {
    "$id": "default.templates.apimanagement/service/api-version-sets",
    "properties": {
      "name": "ApiManagement/service/api-version-sets",
      "shortName": "apivs",
      "lengthMax": 256,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Asterisk, number sign, ampersand, plus, colon, angle brackets, question mark.",
      "invalidCharacters": "*#&+:<>?",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[^\\*#&\\+:<>\\?]{1,256}$",
      "staticValue": ""
    }
  },
  "ApiManagement/service/apis": {
    "$id": "default.templates.apimanagement/service/apis",
    "properties": {
      "name": "ApiManagement/service/apis",
      "shortName": "apis",
      "lengthMax": 256,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Asterisk, number sign, ampersand, plus, colon, angle brackets, question mark.",
      "invalidCharacters": "*#&+:<>?",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[^\\*#&\\+:<>\\?]{1,256}$",
      "staticValue": ""
    }
  },
  "ApiManagement/service/apis/issues": {
    "$id": "default.templates.apimanagement/service/apis/issues",
    "properties": {
      "name": "ApiManagement/service/apis/issues",
      "shortName": "apii",
      "lengthMax": 256,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Asterisk, number sign, ampersand, plus, colon, angle brackets, question mark.",
      "invalidCharacters": "*#&+:<>?",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[^\\*#&\\+:<>\\?]{1,256}$",
      "staticValue": ""
    }
  },
  "ApiManagement/service/apis/issues/attachments": {
    "$id": "default.templates.apimanagement/service/apis/issues/attachments",
    "properties": {
      "name": "ApiManagement/service/apis/issues/attachments",
      "shortName": "apiia",
      "lengthMax": 256,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Asterisk, number sign, ampersand, plus, colon, angle brackets, question mark.",
      "invalidCharacters": "*#&+:<>?",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[^\\*#&\\+:<>\\?]{1,256}$",
      "staticValue": ""
    }
  },
  "ApiManagement/service/apis/issues/comments": {
    "$id": "default.templates.apimanagement/service/apis/issues/comments",
    "properties": {
      "name": "ApiManagement/service/apis/issues/comments",
      "shortName": "apiic",
      "lengthMax": 256,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Asterisk, number sign, ampersand, plus, colon, angle brackets, question mark.",
      "invalidCharacters": "*#&+:<>?",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[^\\*#&\\+:<>\\?]{1,256}$",
      "staticValue": ""
    }
  },
  "ApiManagement/service/apis/operations": {
    "$id": "default.templates.apimanagement/service/apis/operations",
    "properties": {
      "name": "ApiManagement/service/apis/operations",
      "shortName": "apio",
      "lengthMax": 256,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Asterisk, number sign, ampersand, plus, colon, angle brackets, question mark.",
      "invalidCharacters": "*#&+:<>?",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[^\\*#&\\+:<>\\?]{1,256}$",
      "staticValue": ""
    }
  },
  "ApiManagement/service/apis/operations/tags": {
    "$id": "default.templates.apimanagement/service/apis/operations/tags",
    "properties": {
      "name": "ApiManagement/service/apis/operations/tags",
      "shortName": "apiot",
      "lengthMax": 256,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Asterisk, number sign, ampersand, plus, colon, angle brackets, question mark.",
      "invalidCharacters": "*#&+:<>?",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[^\\*#&\\+:<>\\?]{1,256}$",
      "staticValue": ""
    }
  },
  "ApiManagement/service/apis/releases": {
    "$id": "default.templates.apimanagement/service/apis/releases",
    "properties": {
      "name": "ApiManagement/service/apis/releases",
      "shortName": "apir",
      "lengthMax": 80,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, underscores, and hyphens. Start and end with alphanumeric or underscore.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9_]|[a-zA-Z0-9_][a-zA-Z0-9_-]{0,78}[a-zA-Z0-9_])$",
      "staticValue": ""
    }
  },
  "ApiManagement/service/apis/schemas": {
    "$id": "default.templates.apimanagement/service/apis/schemas",
    "properties": {
      "name": "ApiManagement/service/apis/schemas",
      "shortName": "apis",
      "lengthMax": 256,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Asterisk, number sign, ampersand, plus, colon, angle brackets, question mark.",
      "invalidCharacters": "*#&+:<>?",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[^\\*#&\\+:<>\\?]{1,256}$",
      "staticValue": ""
    }
  },
  "ApiManagement/service/apis/tagDescriptions": {
    "$id": "default.templates.apimanagement/service/apis/tagdescriptions",
    "properties": {
      "name": "ApiManagement/service/apis/tagDescriptions",
      "shortName": "apitd",
      "lengthMax": 256,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Asterisk, number sign, ampersand, plus, colon, angle brackets, question mark.",
      "invalidCharacters": "*#&+:<>?",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[^\\*#&\\+:<>\\?]{1,256}$",
      "staticValue": ""
    }
  },
  "ApiManagement/service/apis/tags": {
    "$id": "default.templates.apimanagement/service/apis/tags",
    "properties": {
      "name": "ApiManagement/service/apis/tags",
      "shortName": "apitg",
      "lengthMax": 256,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Asterisk, number sign, ampersand, plus, colon, angle brackets, question mark.",
      "invalidCharacters": "*#&+:<>?",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[^\\*#&\\+:<>\\?]{1,256}$",
      "staticValue": ""
    }
  },
  "ApiManagement/service/authorizationServers": {
    "$id": "default.templates.apimanagement/service/authorizationservers",
    "properties": {
      "name": "ApiManagement/service/authorizationServers",
      "shortName": "apias",
      "lengthMax": 256,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Asterisk, number sign, ampersand, plus, colon, angle brackets, question mark.",
      "invalidCharacters": "*#&+:<>?",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[^\\*#&\\+:<>\\?]{1,256}$",
      "staticValue": ""
    }
  },
  "ApiManagement/service/backends": {
    "$id": "default.templates.apimanagement/service/backends",
    "properties": {
      "name": "ApiManagement/service/backends",
      "shortName": "apib",
      "lengthMax": 256,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Asterisk, number sign, ampersand, plus, colon, angle brackets, question mark.",
      "invalidCharacters": "*#&+:<>?",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[^\\*#&\\+:<>\\?]{1,256}$",
      "staticValue": ""
    }
  },
  "ApiManagement/service/certificates": {
    "$id": "default.templates.apimanagement/service/certificates",
    "properties": {
      "name": "ApiManagement/service/certificates",
      "shortName": "apic",
      "lengthMax": 256,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Asterisk, number sign, ampersand, plus, colon, angle brackets, question mark.",
      "invalidCharacters": "*#&+:<>?",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[^\\*#&\\+:<>\\?]{1,256}$",
      "staticValue": ""
    }
  },
  "ApiManagement/service/diagnostics": {
    "$id": "default.templates.apimanagement/service/diagnostics",
    "properties": {
      "name": "ApiManagement/service/diagnostics",
      "shortName": "apid",
      "lengthMax": 256,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Asterisk, number sign, ampersand, plus, colon, angle brackets, question mark.",
      "invalidCharacters": "*#&+:<>?",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[^\\*#&\\+:<>\\?]{1,256}$",
      "staticValue": ""
    }
  },
  "ApiManagement/service/groups": {
    "$id": "default.templates.apimanagement/service/groups",
    "properties": {
      "name": "ApiManagement/service/groups",
      "shortName": "apig",
      "lengthMax": 256,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Asterisk, number sign, ampersand, plus, colon, angle brackets, question mark.",
      "invalidCharacters": "*#&+:<>?",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[^\\*#&\\+:<>\\?]{1,256}$",
      "staticValue": ""
    }
  },
  "ApiManagement/service/groups/users": {
    "$id": "default.templates.apimanagement/service/groups/users",
    "properties": {
      "name": "ApiManagement/service/groups/users",
      "shortName": "apigu",
      "lengthMax": 256,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Asterisk, number sign, ampersand, plus, colon, angle brackets, question mark.",
      "invalidCharacters": "*#&+:<>?",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[^\\*#&\\+:<>\\?]{1,256}$",
      "staticValue": ""
    }
  },
  "ApiManagement/service/identityProviders": {
    "$id": "default.templates.apimanagement/service/identityproviders",
    "properties": {
      "name": "ApiManagement/service/identityProviders",
      "shortName": "apiip",
      "lengthMax": 256,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Asterisk, number sign, ampersand, plus, colon, angle brackets, question mark.",
      "invalidCharacters": "*#&+:<>?",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[^\\*#&\\+:<>\\?]{1,256}$",
      "staticValue": ""
    }
  },
  "ApiManagement/service/loggers": {
    "$id": "default.templates.apimanagement/service/loggers",
    "properties": {
      "name": "ApiManagement/service/loggers",
      "shortName": "apil",
      "lengthMax": 256,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Asterisk, number sign, ampersand, plus, colon, angle brackets, question mark.",
      "invalidCharacters": "*#&+:<>?",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[^\\*#&\\+:<>\\?]{1,256}$",
      "staticValue": ""
    }
  },
  "ApiManagement/service/notifications": {
    "$id": "default.templates.apimanagement/service/notifications",
    "properties": {
      "name": "ApiManagement/service/notifications",
      "shortName": "apin",
      "lengthMax": 256,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Asterisk, number sign, ampersand, plus, colon, angle brackets, question mark.",
      "invalidCharacters": "*#&+:<>?",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[^\\*#&\\+:<>\\?]{1,256}$",
      "staticValue": ""
    }
  },
  "ApiManagement/service/notifications/recipientEmails": {
    "$id": "default.templates.apimanagement/service/notifications/recipientemails",
    "properties": {
      "name": "ApiManagement/service/notifications/recipientEmails",
      "shortName": "recem",
      "lengthMax": 256,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Asterisk, number sign, ampersand, plus, colon, angle brackets, question mark.",
      "invalidCharacters": "*#&+:<>?",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[^\\*#&\\+:<>\\?]{1,256}$",
      "staticValue": ""
    }
  },
  "ApiManagement/service/openidConnectProviders": {
    "$id": "default.templates.apimanagement/service/openidconnectproviders",
    "properties": {
      "name": "ApiManagement/service/openidConnectProviders",
      "shortName": "apioi",
      "lengthMax": 256,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Asterisk, number sign, ampersand, plus, colon, angle brackets, question mark.",
      "invalidCharacters": "*#&+:<>?",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[^\\*#&\\+:<>\\?]{1,256}$",
      "staticValue": ""
    }
  },
  "ApiManagement/service/policies": {
    "$id": "default.templates.apimanagement/service/policies",
    "properties": {
      "name": "ApiManagement/service/policies",
      "shortName": "apipo",
      "lengthMax": 256,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Asterisk, number sign, ampersand, plus, colon, angle brackets, question mark.",
      "invalidCharacters": "*#&+:<>?",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[^\\*#&\\+:<>\\?]{1,256}$",
      "staticValue": ""
    }
  },
  "ApiManagement/service/products": {
    "$id": "default.templates.apimanagement/service/products",
    "properties": {
      "name": "ApiManagement/service/products",
      "shortName": "apipr",
      "lengthMax": 256,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Asterisk, number sign, ampersand, plus, colon, angle brackets, question mark.",
      "invalidCharacters": "*#&+:<>?",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[^\\*#&\\+:<>\\?]{1,256}$",
      "staticValue": ""
    }
  },
  "ApiManagement/service/products/apis": {
    "$id": "default.templates.apimanagement/service/products/apis",
    "properties": {
      "name": "ApiManagement/service/products/apis",
      "shortName": "api",
      "lengthMax": 256,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Asterisk, number sign, ampersand, plus, colon, angle brackets, question mark.",
      "invalidCharacters": "*#&+:<>?",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[^\\*#&\\+:<>\\?]{1,256}$",
      "staticValue": ""
    }
  },
  "ApiManagement/service/products/groups": {
    "$id": "default.templates.apimanagement/service/products/groups",
    "properties": {
      "name": "ApiManagement/service/products/groups",
      "shortName": "grp",
      "lengthMax": 256,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Asterisk, number sign, ampersand, plus, colon, angle brackets, question mark.",
      "invalidCharacters": "*#&+:<>?",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[^\\*#&\\+:<>\\?]{1,256}$",
      "staticValue": ""
    }
  },
  "ApiManagement/service/products/tags": {
    "$id": "default.templates.apimanagement/service/products/tags",
    "properties": {
      "name": "ApiManagement/service/products/tags",
      "shortName": "tag",
      "lengthMax": 256,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Asterisk, number sign, ampersand, plus, colon, angle brackets, question mark.",
      "invalidCharacters": "*#&+:<>?",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[^\\*#&\\+:<>\\?]{1,256}$",
      "staticValue": ""
    }
  },
  "ApiManagement/service/properties": {
    "$id": "default.templates.apimanagement/service/properties",
    "properties": {
      "name": "ApiManagement/service/properties",
      "shortName": "prop",
      "lengthMax": 256,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Asterisk, number sign, ampersand, plus, colon, angle brackets, question mark.",
      "invalidCharacters": "*#&+:<>?",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[^\\*#&\\+:<>\\?]{1,256}$",
      "staticValue": ""
    }
  },
  "ApiManagement/service/subscriptions": {
    "$id": "default.templates.apimanagement/service/subscriptions",
    "properties": {
      "name": "ApiManagement/service/subscriptions",
      "shortName": "subsr",
      "lengthMax": 256,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Asterisk, number sign, ampersand, plus, colon, angle brackets, question mark.",
      "invalidCharacters": "*#&+:<>?",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[^\\*#&\\+:<>\\?]{1,256}$",
      "staticValue": ""
    }
  },
  "ApiManagement/service/tags": {
    "$id": "default.templates.apimanagement/service/tags",
    "properties": {
      "name": "ApiManagement/service/tags",
      "shortName": "tag",
      "lengthMax": 256,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Asterisk, number sign, ampersand, plus, colon, angle brackets, question mark.",
      "invalidCharacters": "*#&+:<>?",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[^\\*#&\\+:<>\\?]{1,256}$",
      "staticValue": ""
    }
  },
  "ApiManagement/service/templates": {
    "$id": "default.templates.apimanagement/service/templates",
    "properties": {
      "name": "ApiManagement/service/templates",
      "shortName": "temp",
      "lengthMax": 256,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Asterisk, number sign, ampersand, plus, colon, angle brackets, question mark.",
      "invalidCharacters": "*#&+:<>?",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[^\\*#&\\+:<>\\?]{1,256}$",
      "staticValue": ""
    }
  },
  "ApiManagement/service/users": {
    "$id": "default.templates.apimanagement/service/users",
    "properties": {
      "name": "ApiManagement/service/users",
      "shortName": "user",
      "lengthMax": 256,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Asterisk, number sign, ampersand, plus, colon, angle brackets, question mark.",
      "invalidCharacters": "*#&+:<>?",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[^\\*#&\\+:<>\\?]{1,256}$",
      "staticValue": ""
    }
  },
  "App/jobs": {
    "$id": "default.templates.app/jobs",
    "properties": {
      "name": "App/jobs",
      "shortName": "caj",
      "lengthMax": 32,
      "lengthMin": 2,
      "casing": "lower",
      "validText": "Lowercase letters, numbers, and hyphens. Start with letter, and end with alphanumeric",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-z]|[a-z][a-z0-9-]{1,30}[a-z0-9])$",
      "staticValue": ""
    }
  },
  "AppConfiguration/configurationStores": {
    "$id": "default.templates.appconfiguration/configurationstores",
    "properties": {
      "name": "AppConfiguration/configurationStores",
      "shortName": "appcs",
      "lengthMax": 50,
      "lengthMin": 5,
      "casing": "none",
      "validText": "Alphanumerics, underscores, and hyphens.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_-]{5,50}$",
      "staticValue": ""
    }
  },
  "Authorization/locks": {
    "$id": "default.templates.authorization/locks",
    "properties": {
      "name": "Authorization/locks",
      "shortName": "lock",
      "lengthMax": 90,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, periods, underscores, hyphens, and parenthesis.",
      "invalidText": "Can't end in period",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": ".",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_\\.()-]{0,89}[a-zA-Z0-9_()-]$",
      "staticValue": ""
    }
  },
  "Authorization/policyAssignments::DisplayName": {
    "$id": "default.templates.authorization/policyassignments::displayname",
    "properties": {
      "name": "Authorization/policyAssignments::DisplayName",
      "shortName": "pas",
      "lengthMax": 128,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Can't include percent sign and can't end with period or space.",
      "invalidCharacters": "%",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": ". ",
      "invalidCharactersConsecutive": "",
      "regex": "^(?!.*[\\.]$)(?!.* $)[^%]{1,128}$",
      "staticValue": ""
    }
  },
  "Authorization/policyAssignments::ManagementGroupResourceName": {
    "$id": "default.templates.authorization/policyassignments::managementgroupresourcename",
    "properties": {
      "name": "Authorization/policyAssignments::ManagementGroupResourceName",
      "shortName": "pas",
      "lengthMax": 24,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Can't include percent sign and can't end with period or space.",
      "invalidCharacters": "%",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": ". ",
      "invalidCharactersConsecutive": "",
      "regex": "^(?!.*[\\.]$)(?!.* $)[^%]{1,24}$",
      "staticValue": ""
    }
  },
  "Authorization/policyAssignments::ResoureName": {
    "$id": "default.templates.authorization/policyassignments::resourename",
    "properties": {
      "name": "Authorization/policyAssignments::ResoureName",
      "shortName": "pas",
      "lengthMax": 64,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Can't include percent sign and can't end with period or space.",
      "invalidCharacters": "%",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": ". ",
      "invalidCharactersConsecutive": "",
      "regex": "^(?!.*[\\.]$)(?!.* $)[^%]{1,64}$",
      "staticValue": ""
    }
  },
  "Authorization/policyDefinitions::DisplayName": {
    "$id": "default.templates.authorization/policydefinitions::displayname",
    "properties": {
      "name": "Authorization/policyDefinitions::DisplayName",
      "shortName": "policy",
      "lengthMax": 128,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Display name can contain any characters.",
      "invalidText": "Can't include percent sign and can't end with period or space.",
      "invalidCharacters": "%",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": ". ",
      "invalidCharactersConsecutive": "",
      "regex": "^(?!.*[\\.]$)(?!.* $)[^%]{1,128}$",
      "staticValue": ""
    }
  },
  "Authorization/policyDefinitions::ResoureName": {
    "$id": "default.templates.authorization/policydefinitions::resourename",
    "properties": {
      "name": "Authorization/policyDefinitions::ResoureName",
      "shortName": "policy",
      "lengthMax": 64,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Display name can contain any characters.",
      "invalidText": "Can't include percent sign and can't end with period or space.",
      "invalidCharacters": "%",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": ". ",
      "invalidCharactersConsecutive": "",
      "regex": "^(?!.*[\\.]$)(?!.* $)[^%]{1,64}$",
      "staticValue": ""
    }
  },
  "Authorization/policySetDefinitions::DisplayName": {
    "$id": "default.templates.authorization/policysetdefinitions::displayname",
    "properties": {
      "name": "Authorization/policySetDefinitions::DisplayName",
      "shortName": "init",
      "lengthMax": 128,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Display name can contain any characters.",
      "invalidText": "Can't include percent sign and can't end with period or space.",
      "invalidCharacters": "%",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": ". ",
      "invalidCharactersConsecutive": "",
      "regex": "^(?!.*[\\.]$)(?!.* $)[^%]{1,128}$",
      "staticValue": ""
    }
  },
  "Authorization/policySetDefinitions::ManagementGroupResourceName": {
    "$id": "default.templates.authorization/policysetdefinitions::managementgroupresourcename",
    "properties": {
      "name": "Authorization/policySetDefinitions::ManagementGroupResourceName",
      "shortName": "init",
      "lengthMax": 24,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Display name can contain any characters.",
      "invalidText": "Can't include percent sign and can't end with period or space.",
      "invalidCharacters": "%",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": ". ",
      "invalidCharactersConsecutive": "",
      "regex": "^(?!.*[\\.]$)(?!.* $)[^%]{1,24}$",
      "staticValue": ""
    }
  },
  "Authorization/policySetDefinitions::ResoureName": {
    "$id": "default.templates.authorization/policysetdefinitions::resourename",
    "properties": {
      "name": "Authorization/policySetDefinitions::ResoureName",
      "shortName": "init",
      "lengthMax": 64,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Display name can contain any characters.",
      "invalidText": "Can't include percent sign and can't end with period or space.",
      "invalidCharacters": "%",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": ". ",
      "invalidCharactersConsecutive": "",
      "regex": "^(?!.*[\\.]$)(?!.* $)[^%]{1,64}$",
      "staticValue": ""
    }
  },
  "Automation/automationAccounts": {
    "$id": "default.templates.automation/automationaccounts",
    "properties": {
      "name": "Automation/automationAccounts",
      "shortName": "aa",
      "lengthMax": 50,
      "lengthMin": 6,
      "casing": "none",
      "validText": "Alphanumerics and hyphens. Start with letter. End with alphanumeric.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z][a-zA-Z0-9-]{4,48}[a-zA-Z0-9]$",
      "staticValue": ""
    }
  },
  "Automation/automationAccounts/certificates": {
    "$id": "default.templates.automation/automationaccounts/certificates",
    "properties": {
      "name": "Automation/automationAccounts/certificates",
      "shortName": "cert",
      "lengthMax": 128,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Angle brackets, asterisk, percent sign, ampersand, colon, backslash, question mark, period, plus sign, and slash. Can't end with space.",
      "invalidCharacters": "<>*%&:\\?.+/",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[^ ]|[^<>\\*%&:\\\\?\\.\\+/]{1,127}[^ ])$",
      "staticValue": ""
    }
  },
  "Automation/automationAccounts/connections": {
    "$id": "default.templates.automation/automationaccounts/connections",
    "properties": {
      "name": "Automation/automationAccounts/connections",
      "shortName": "conn",
      "lengthMax": 128,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Angle brackets, asterisk, percent sign, ampersand, colon, backslash, question mark, period, plus sign, and slash. Can't end with space.",
      "invalidCharacters": "<>*%&:\\?.+/",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[^ ]|[^<>\\*%&:\\\\?\\.\\+/]{1,127}[^ ])$",
      "staticValue": ""
    }
  },
  "Automation/automationAccounts/credentials": {
    "$id": "default.templates.automation/automationaccounts/credentials",
    "properties": {
      "name": "Automation/automationAccounts/credentials",
      "shortName": "cred",
      "lengthMax": 128,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Angle brackets, asterisk, percent sign, ampersand, colon, backslash, question mark, period, plus sign, and slash. Can't end with space.",
      "invalidCharacters": "<>*%&:\\?.+/",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[^ ]|[^<>\\*%&:\\\\?\\.\\+/]{1,127}[^ ])$",
      "staticValue": ""
    }
  },
  "Automation/automationAccounts/runbooks": {
    "$id": "default.templates.automation/automationaccounts/runbooks",
    "properties": {
      "name": "Automation/automationAccounts/runbooks",
      "shortName": "runbk",
      "lengthMax": 63,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, underscores, and hyphens. Start with a letter.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z]|[a-zA-Z][a-zA-Z0-9_-]{0,62})$",
      "staticValue": ""
    }
  },
  "Automation/automationAccounts/schedules": {
    "$id": "default.templates.automation/automationaccounts/schedules",
    "properties": {
      "name": "Automation/automationAccounts/schedules",
      "shortName": "sched",
      "lengthMax": 128,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Angle brackets, asterisk, percent sign, ampersand, colon, backslash, question mark, period, plus sign, and slash. Can't end with space.",
      "invalidCharacters": "<>*%&:\\?.+/",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[^ ]|[^<>\\*%&:\\\\?\\.\\+/]{1,127}[^ ])$",
      "staticValue": ""
    }
  },
  "Automation/automationAccounts/variables": {
    "$id": "default.templates.automation/automationaccounts/variables",
    "properties": {
      "name": "Automation/automationAccounts/variables",
      "shortName": "var",
      "lengthMax": 128,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Angle brackets, asterisk, percent sign, ampersand, colon, backslash, question mark, period, plus sign, and slash. Can't end with space.",
      "invalidCharacters": "<>*%&:\\?.+/",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[^ ]|[^<>\\*%&:\\\\?\\.\\+/]{1,127}[^ ])$",
      "staticValue": ""
    }
  },
  "Automation/automationAccounts/watchers": {
    "$id": "default.templates.automation/automationaccounts/watchers",
    "properties": {
      "name": "Automation/automationAccounts/watchers",
      "shortName": "watch",
      "lengthMax": 63,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, underscores, and hyphens. Start with a letter.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z]|[a-zA-Z][a-zA-Z0-9_-]{0,62})$",
      "staticValue": ""
    }
  },
  "Automation/automationAccounts/webhooks": {
    "$id": "default.templates.automation/automationaccounts/webhooks",
    "properties": {
      "name": "Automation/automationAccounts/webhooks",
      "shortName": "wbhk",
      "lengthMax": 128,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Angle brackets, asterisk, percent sign, ampersand, colon, backslash, question mark, period, plus sign, and slash. Can't end with space.",
      "invalidCharacters": "<>*%&:\\?.+/",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[^ ]|[^<>\\*%&:\\\\?\\.\\+/]{1,127}[^ ])$",
      "staticValue": ""
    }
  },
  "Batch/batchAccounts": {
    "$id": "default.templates.batch/batchaccounts",
    "properties": {
      "name": "Batch/batchAccounts",
      "shortName": "ba",
      "lengthMax": 24,
      "lengthMin": 3,
      "casing": "lower",
      "validText": "Lowercase letters and numbers.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-z0-9]{3,24}$",
      "staticValue": "",
      "values": {
        "SEPARATOR": null
      }
    }
  },
  "Batch/batchAccounts/applications": {
    "$id": "default.templates.batch/batchaccounts/applications",
    "properties": {
      "name": "Batch/batchAccounts/applications",
      "shortName": "appl",
      "lengthMax": 64,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, underscores, and hyphens.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_-]{1,64}$",
      "staticValue": ""
    }
  },
  "Batch/batchAccounts/certificates": {
    "$id": "default.templates.batch/batchaccounts/certificates",
    "properties": {
      "name": "Batch/batchAccounts/certificates",
      "shortName": "cert",
      "lengthMax": 45,
      "lengthMin": 5,
      "casing": "none",
      "validText": "Alphanumerics, underscores, and hyphens.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_-]{5,45}$",
      "staticValue": ""
    }
  },
  "Batch/batchAccounts/pools": {
    "$id": "default.templates.batch/batchaccounts/pools",
    "properties": {
      "name": "Batch/batchAccounts/pools",
      "shortName": "pool",
      "lengthMax": 64,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, underscores, and hyphens.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_-]{1,64}$",
      "staticValue": ""
    }
  },
  "Blockchain/blockchainMembers": {
    "$id": "default.templates.blockchain/blockchainmembers",
    "properties": {
      "name": "Blockchain/blockchainMembers",
      "shortName": "blchm",
      "lengthMax": 20,
      "lengthMin": 2,
      "casing": "lower",
      "validText": "Lowercase letters and numbers. Start with lowercase letter.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-z][a-z0-9]{2,24}$",
      "staticValue": "",
      "values": {
        "SEPARATOR": null
      }
    }
  },
  "Blueprint/blueprintAssignments": {
    "$id": "default.templates.blueprint/blueprintassignments",
    "properties": {
      "name": "Blueprint/blueprintAssignments",
      "shortName": "bpas",
      "lengthMax": 90,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Letters, numbers, hyphens, and periods.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9-.]{1,90}$",
      "staticValue": ""
    }
  },
  "Blueprint/blueprints": {
    "$id": "default.templates.blueprint/blueprints",
    "properties": {
      "name": "Blueprint/blueprints",
      "shortName": "bp",
      "lengthMax": 48,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Letters, numbers, hyphens, and periods.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9-.]{1,48}$",
      "staticValue": ""
    }
  },
  "Blueprint/blueprints/artifacts": {
    "$id": "default.templates.blueprint/blueprints/artifacts",
    "properties": {
      "name": "Blueprint/blueprints/artifacts",
      "shortName": "bpa",
      "lengthMax": 48,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Letters, numbers, hyphens, and periods.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9-.]{1,48}$",
      "staticValue": ""
    }
  },
  "Blueprint/blueprints/versions": {
    "$id": "default.templates.blueprint/blueprints/versions",
    "properties": {
      "name": "Blueprint/blueprints/versions",
      "shortName": "bpv",
      "lengthMax": 20,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Letters, numbers, hyphens, and periods.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9-.]{1,20}$",
      "staticValue": ""
    }
  },
  "BotService/botServices": {
    "$id": "default.templates.botservice/botservices",
    "properties": {
      "name": "BotService/botServices",
      "shortName": "botsvc",
      "lengthMax": 64,
      "lengthMin": 2,
      "casing": "none",
      "validText": "Alphanumerics, underscores, periods, and hyphens. Start with alphanumeric.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9][a-zA-Z0-9_\\.-]{1,63}$",
      "staticValue": ""
    }
  },
  "BotService/botServices/channels": {
    "$id": "default.templates.botservice/botservices/channels",
    "properties": {
      "name": "BotService/botServices/channels",
      "shortName": "chan",
      "lengthMax": 64,
      "lengthMin": 2,
      "casing": "none",
      "validText": "Alphanumerics, underscores, periods, and hyphens. Start with alphanumeric.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9][a-zA-Z0-9_\\.-]{1,63}$",
      "staticValue": ""
    }
  },
  "BotService/botServices/Connections": {
    "$id": "default.templates.botservice/botservices/connections",
    "properties": {
      "name": "BotService/botServices/Connections",
      "shortName": "conn",
      "lengthMax": 64,
      "lengthMin": 2,
      "casing": "none",
      "validText": "Alphanumerics, underscores, periods, and hyphens. Start with alphanumeric.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9][a-zA-Z0-9_\\.-]{1,63}$",
      "staticValue": ""
    }
  },
  "BotService/enterpriseChannels": {
    "$id": "default.templates.botservice/enterprisechannels",
    "properties": {
      "name": "BotService/enterpriseChannels",
      "shortName": "botec",
      "lengthMax": 64,
      "lengthMin": 2,
      "casing": "none",
      "validText": "Alphanumerics, underscores, periods, and hyphens. Start with alphanumeric.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9][a-zA-Z0-9_\\.-]{1,63}$",
      "staticValue": ""
    }
  },
  "Cache/Redis": {
    "$id": "default.templates.cache/redis",
    "properties": {
      "name": "Cache/Redis",
      "shortName": "redis",
      "lengthMax": 63,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics and hyphens. Start and end with alphanumeric.",
      "invalidText": "Consecutive hyphens not allowed.",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "-",
      "regex": "^(?!.*-{2}.*)([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]{0,61}[a-zA-Z0-9])$",
      "staticValue": ""
    }
  },
  "Cache/Redis/firewallRules": {
    "$id": "default.templates.cache/redis/firewallrules",
    "properties": {
      "name": "Cache/Redis/firewallRules",
      "shortName": "rule",
      "lengthMax": 256,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9]{1,256}$",
      "staticValue": ""
    }
  },
  "Cdn/profiles": {
    "$id": "default.templates.cdn/profiles",
    "properties": {
      "name": "Cdn/profiles",
      "shortName": "afd",
      "lengthMax": 260,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics and hyphens. Start and end with alphanumeric.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]{0,258}[a-zA-Z0-9])$",
      "staticValue": ""
    }
  },
  "Cdn/profiles/endpoints": {
    "$id": "default.templates.cdn/profiles/endpoints",
    "properties": {
      "name": "Cdn/profiles/endpoints",
      "shortName": "cdne",
      "lengthMax": 50,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics and hyphens. Start and end with alphanumeric.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]{0,48}[a-zA-Z0-9])$",
      "staticValue": ""
    }
  },
  "CertificateRegistration/certificateOrders": {
    "$id": "default.templates.certificateregistration/certificateorders",
    "properties": {
      "name": "CertificateRegistration/certificateOrders",
      "shortName": "cerco",
      "lengthMax": 30,
      "lengthMin": 3,
      "casing": "none",
      "validText": "Alphanumerics.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9]{3,30}$",
      "staticValue": "",
      "values": {
        "SEPARATOR": null
      }
    }
  },
  "CognitiveServices/accounts": {
    "$id": "default.templates.cognitiveservices/accounts",
    "properties": {
      "name": "CognitiveServices/accounts",
      "shortName": "cog",
      "lengthMax": 64,
      "lengthMin": 2,
      "casing": "none",
      "validText": "Alphanumerics and hyphens. Start and end with alphanumeric.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9][a-zA-Z0-9-]{0,62}[a-zA-Z0-9]$",
      "staticValue": ""
    }
  },
  "Compute/availabilitySets": {
    "$id": "default.templates.compute/availabilitysets",
    "properties": {
      "name": "Compute/availabilitySets",
      "shortName": "avail",
      "lengthMax": 80,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, underscores, periods, and hyphens. Start with alphanumeric. End with alphanumeric or underscore",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\.-]{0,78}[a-zA-Z0-9_])$",
      "staticValue": ""
    }
  },
  "Compute/cloudServices": {
    "$id": "default.templates.compute/cloudservices",
    "properties": {
      "name": "Compute/cloudServices",
      "shortName": "cld",
      "lengthMax": null,
      "lengthMin": null,
      "casing": "none",
      "validText": "",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "",
      "staticValue": ""
    }
  },
  "Compute/diskEncryptionSets": {
    "$id": "default.templates.compute/diskencryptionsets",
    "properties": {
      "name": "Compute/diskEncryptionSets",
      "shortName": "des",
      "lengthMax": 80,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics and underscores.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_]{1,80}$",
      "staticValue": ""
    }
  },
  "Compute/disks::DataDisk": {
    "$id": "default.templates.compute/disks::datadisk",
    "properties": {
      "name": "Compute/disks::DataDisk",
      "shortName": "disk",
      "lengthMax": 80,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics and underscores.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_]{1,80}$",
      "staticValue": ""
    }
  },
  "Compute/disks::OSDisk": {
    "$id": "default.templates.compute/disks::osdisk",
    "properties": {
      "name": "Compute/disks::OSDisk",
      "shortName": "osdisk",
      "lengthMax": 80,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics and underscores.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_]{1,80}$",
      "staticValue": ""
    }
  },
  "Compute/galleries": {
    "$id": "default.templates.compute/galleries",
    "properties": {
      "name": "Compute/galleries",
      "shortName": "gal",
      "lengthMax": 80,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics and periods. Start and end with alphanumeric.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\.]{0,78}[a-zA-Z0-9])$",
      "staticValue": ""
    }
  },
  "Compute/galleries/applications": {
    "$id": "default.templates.compute/galleries/applications",
    "properties": {
      "name": "Compute/galleries/applications",
      "shortName": "app",
      "lengthMax": 80,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, hyphens, and periods. Start and end with alphanumeric.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-\\.]{0,78}[a-zA-Z0-9])$",
      "staticValue": ""
    }
  },
  "Compute/galleries/applications/versions": {
    "$id": "default.templates.compute/galleries/applications/versions",
    "properties": {
      "name": "Compute/galleries/applications/versions",
      "shortName": "apver",
      "lengthMax": null,
      "lengthMin": null,
      "casing": "none",
      "validText": "32-bit integer. Numbers and periods.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "1.0.0",
      "staticValue": "1.0.0",
      "template": "1.0.0"
    }
  },
  "Compute/galleries/images": {
    "$id": "default.templates.compute/galleries/images",
    "properties": {
      "name": "Compute/galleries/images",
      "shortName": "gimg",
      "lengthMax": 80,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, underscores, hyphens, and periods. Start and end with alphanumeric.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\.-]{0,78}[a-zA-Z0-9])$",
      "staticValue": ""
    }
  },
  "Compute/galleries/images/versions": {
    "$id": "default.templates.compute/galleries/images/versions",
    "properties": {
      "name": "Compute/galleries/images/versions",
      "shortName": "ver",
      "lengthMax": null,
      "lengthMin": null,
      "casing": "none",
      "validText": "32-bit integer. Numbers and periods.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "1.0.0",
      "staticValue": "1.0.0",
      "template": "1.0.0"
    }
  },
  "Compute/images": {
    "$id": "default.templates.compute/images",
    "properties": {
      "name": "Compute/images",
      "shortName": "cimg",
      "lengthMax": 80,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, underscores, periods, and hyphens. Start with alphanumeric. End with alphanumeric or underscore",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\.-]{0,78}[a-zA-Z0-9_])$",
      "staticValue": ""
    }
  },
  "Compute/snapshots": {
    "$id": "default.templates.compute/snapshots",
    "properties": {
      "name": "Compute/snapshots",
      "shortName": "snap",
      "lengthMax": 80,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, underscores, periods, and hyphens. Start with alphanumeric. End with alphanumeric or underscore",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\.-]{0,78}[a-zA-Z0-9_])$",
      "staticValue": ""
    }
  },
  "Compute/virtualMachines::Linux": {
    "$id": "default.templates.compute/virtualmachines::linux",
    "properties": {
      "name": "Compute/virtualMachines::Linux",
      "shortName": "vml",
      "lengthMax": 64,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Backslash, slash, double quote, single quote, square brackets, colon, pipe, angle brackets, plus sign, equals sign, semi-colon, comma, question mark, asterisk, at sign, ampersand, and underscore. Can't end with period or hyphen.",
      "invalidCharacters": "\\/\\'[]:|<>+=;,?*@&_\"",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": ".-",
      "invalidCharactersConsecutive": "",
      "regex": "^(?!.*[.]$)(?!.*-$)[^\\/\\[\\]:|<>\\+=;,\\?@&_\\*]{1,64}$",
      "staticValue": ""
    }
  },
  "Compute/virtualMachines::Windows": {
    "$id": "default.templates.compute/virtualmachines::windows",
    "properties": {
      "name": "Compute/virtualMachines::Windows",
      "shortName": "vmw",
      "lengthMax": 15,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Backslash, slash, double quote, single quote, square brackets, colon, pipe, angle brackets, plus sign, equals sign, semi-colon, comma, question mark, asterisk, at sign, ampersand, and underscore. Can't include space or period. Can't end with hyphen.",
      "invalidCharacters": "/\\'[]:|<>+=;,?*@&_ .\"",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "-",
      "invalidCharactersConsecutive": "",
      "regex": "^(?!.*-$)[^\\/\\[\\]:|<>\\+=;,\\?@&_\\. \\*]{1,15}$",
      "staticValue": ""
    }
  },
  "Compute/virtualMachineScaleSets::Linux": {
    "$id": "default.templates.compute/virtualmachinescalesets::linux",
    "properties": {
      "name": "Compute/virtualMachineScaleSets::Linux",
      "shortName": "vmssl",
      "lengthMax": 64,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Backslash, slash, double quote, single quote, square brackets, colon, pipe, angle brackets, plus sign, equals sign, semi-colon, comma, question mark, asterisk, at sign, and ampersand. Can't use space. Can't start with underscore. Can't end with period or hyphen.",
      "invalidCharacters": "/\"'[]:|<>+=;,?*@& ",
      "invalidCharactersStart": "_",
      "invalidCharactersEnd": ".-",
      "invalidCharactersConsecutive": "",
      "regex": "^(?!_.*$)(?!.*[-\\.]$)[^\\/\\[\\]:|<>\\+=;,\\?@& \\*]{1,64}$",
      "staticValue": ""
    }
  },
  "Compute/virtualMachineScaleSets::Windows": {
    "$id": "default.templates.compute/virtualmachinescalesets::windows",
    "properties": {
      "name": "Compute/virtualMachineScaleSets::Windows",
      "shortName": "vmssw",
      "lengthMax": 15,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Backslash, slash, double quote, single quote, square brackets, colon, pipe, angle brackets, plus sign, equals sign, semi-colon, comma, question mark, asterisk, at sign, and ampersand. Can't use space. Can't start with underscore. Can't end with period or hyphen.",
      "invalidCharacters": "/\"'[]:|<>+=;,?*@& ",
      "invalidCharactersStart": "_",
      "invalidCharactersEnd": ".-",
      "invalidCharactersConsecutive": "",
      "regex": "^(?!_.*$)(?!.*[-.]$)[^\"\\/\\[\\]:|<>\\+=;,\\?@& \\*]{1,15}$",
      "staticValue": ""
    }
  },
  "ContainerInstance/containerGroups": {
    "$id": "default.templates.containerinstance/containergroups",
    "properties": {
      "name": "ContainerInstance/containerGroups",
      "shortName": "ci",
      "lengthMax": 63,
      "lengthMin": 1,
      "casing": "lower",
      "validText": "Lowercase letters, numbers, and hyphens.",
      "invalidText": "Can't start or end with hyphen. Consecutive hyphens aren't allowed.",
      "invalidCharacters": "",
      "invalidCharactersStart": "-",
      "invalidCharactersEnd": "-",
      "invalidCharactersConsecutive": "-",
      "regex": "^(?!-.*)(?!.*-$)(?!.*-{2}.*)[a-z0-9-]{1,63}$",
      "staticValue": ""
    }
  },
  "ContainerRegistry/registries": {
    "$id": "default.templates.containerregistry/registries",
    "properties": {
      "name": "ContainerRegistry/registries",
      "shortName": "cr",
      "lengthMax": 50,
      "lengthMin": 5,
      "casing": "none",
      "validText": "Alphanumerics.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9]{5,50}$",
      "staticValue": "",
      "values": {
        "SEPARATOR": null
      }
    }
  },
  "ContainerRegistry/registries/buildTasks": {
    "$id": "default.templates.containerregistry/registries/buildtasks",
    "properties": {
      "name": "ContainerRegistry/registries/buildTasks",
      "shortName": "btsk",
      "lengthMax": 50,
      "lengthMin": 5,
      "casing": "none",
      "validText": "Alphanumerics.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9]{5,50}$",
      "staticValue": "",
      "values": {
        "SEPARATOR": null
      }
    }
  },
  "ContainerRegistry/registries/buildTasks/steps": {
    "$id": "default.templates.containerregistry/registries/buildtasks/steps",
    "properties": {
      "name": "ContainerRegistry/registries/buildTasks/steps",
      "shortName": "step",
      "lengthMax": 50,
      "lengthMin": 5,
      "casing": "none",
      "validText": "Alphanumerics.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9]{5,50}$",
      "staticValue": "",
      "values": {
        "SEPARATOR": null
      }
    }
  },
  "ContainerRegistry/registries/replications": {
    "$id": "default.templates.containerregistry/registries/replications",
    "properties": {
      "name": "ContainerRegistry/registries/replications",
      "shortName": "rep",
      "lengthMax": 50,
      "lengthMin": 5,
      "casing": "none",
      "validText": "Alphanumerics.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9]{5,50}$",
      "staticValue": "",
      "values": {
        "SEPARATOR": null
      }
    }
  },
  "ContainerRegistry/registries/scopeMaps": {
    "$id": "default.templates.containerregistry/registries/scopemaps",
    "properties": {
      "name": "ContainerRegistry/registries/scopeMaps",
      "shortName": "scmap",
      "lengthMax": 50,
      "lengthMin": 5,
      "casing": "none",
      "validText": "Alphanumerics, hyphens, and underscores.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_-]{5,50}$",
      "staticValue": ""
    }
  },
  "ContainerRegistry/registries/tasks": {
    "$id": "default.templates.containerregistry/registries/tasks",
    "properties": {
      "name": "ContainerRegistry/registries/tasks",
      "shortName": "task",
      "lengthMax": 50,
      "lengthMin": 5,
      "casing": "none",
      "validText": "Alphanumerics, hyphens, and underscores.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_-]{5,50}$",
      "staticValue": ""
    }
  },
  "ContainerRegistry/registries/tokens": {
    "$id": "default.templates.containerregistry/registries/tokens",
    "properties": {
      "name": "ContainerRegistry/registries/tokens",
      "shortName": "tokn",
      "lengthMax": 50,
      "lengthMin": 5,
      "casing": "none",
      "validText": "Alphanumerics, hyphens, and underscores.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_-]{5,50}$",
      "staticValue": ""
    }
  },
  "ContainerRegistry/registries/webhooks": {
    "$id": "default.templates.containerregistry/registries/webhooks",
    "properties": {
      "name": "ContainerRegistry/registries/webhooks",
      "shortName": "webhk",
      "lengthMax": 50,
      "lengthMin": 5,
      "casing": "none",
      "validText": "Alphanumerics.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9]{5,50}$",
      "staticValue": "",
      "values": {
        "SEPARATOR": null
      }
    }
  },
  "ContainerService/managedClusters": {
    "$id": "default.templates.containerservice/managedclusters",
    "properties": {
      "name": "ContainerService/managedClusters",
      "shortName": "aks",
      "lengthMax": 63,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, underscores, and hyphens. Start and end with alphanumeric.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_-]{0,61}[a-zA-Z0-9])$",
      "staticValue": ""
    }
  },
  "ContainerServiceopenShiftManagedClusters": {
    "$id": "default.templates.containerserviceopenshiftmanagedclusters",
    "properties": {
      "name": "ContainerServiceopenShiftManagedClusters",
      "shortName": "osmc",
      "lengthMax": 30,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9]{1,30}$",
      "staticValue": ""
    }
  },
  "CustomerInsights/hubs": {
    "$id": "default.templates.customerinsights/hubs",
    "properties": {
      "name": "CustomerInsights/hubs",
      "shortName": "cihub",
      "lengthMax": 64,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics. Start with letter.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z][a-zA-Z0-9]{0,63}$",
      "staticValue": ""
    }
  },
  "CustomerInsights/hubs/authorizationPolicies": {
    "$id": "default.templates.customerinsights/hubs/authorizationpolicies",
    "properties": {
      "name": "CustomerInsights/hubs/authorizationPolicies",
      "shortName": "authp",
      "lengthMax": 50,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, underscores, and periods. Start and end with alphnumeric.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_-]{0,48}[a-zA-Z0-9])$",
      "staticValue": ""
    }
  },
  "CustomerInsights/hubs/connectors": {
    "$id": "default.templates.customerinsights/hubs/connectors",
    "properties": {
      "name": "CustomerInsights/hubs/connectors",
      "shortName": "conn",
      "lengthMax": 128,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics and underscores. Start with letter.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z][a-zA-Z0-9_]{0,127}$",
      "staticValue": "",
      "values": {
        "SEPARATOR": "_"
      }
    }
  },
  "CustomerInsights/hubs/connectors/mappings": {
    "$id": "default.templates.customerinsights/hubs/connectors/mappings",
    "properties": {
      "name": "CustomerInsights/hubs/connectors/mappings",
      "shortName": "map",
      "lengthMax": 128,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics and underscores. Start with letter.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z][a-zA-Z0-9_]{0,127}$",
      "staticValue": "",
      "values": {
        "SEPARATOR": "_"
      }
    }
  },
  "CustomerInsights/hubs/interactions": {
    "$id": "default.templates.customerinsights/hubs/interactions",
    "properties": {
      "name": "CustomerInsights/hubs/interactions",
      "shortName": "int",
      "lengthMax": 128,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics and underscores. Start with letter.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z][a-zA-Z0-9_]{0,127}$",
      "staticValue": "",
      "values": {
        "SEPARATOR": "_"
      }
    }
  },
  "CustomerInsights/hubs/kpi": {
    "$id": "default.templates.customerinsights/hubs/kpi",
    "properties": {
      "name": "CustomerInsights/hubs/kpi",
      "shortName": "kpi",
      "lengthMax": 512,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics and underscores. Start with letter.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z][a-zA-Z0-9_]{0,511}$",
      "staticValue": "",
      "values": {
        "SEPARATOR": "_"
      }
    }
  },
  "CustomerInsights/hubs/links": {
    "$id": "default.templates.customerinsights/hubs/links",
    "properties": {
      "name": "CustomerInsights/hubs/links",
      "shortName": "link",
      "lengthMax": 512,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics and underscores. Start with letter.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z][a-zA-Z0-9_]{0,511}$",
      "staticValue": "",
      "values": {
        "SEPARATOR": "_"
      }
    }
  },
  "CustomerInsights/hubs/predictions": {
    "$id": "default.templates.customerinsights/hubs/predictions",
    "properties": {
      "name": "CustomerInsights/hubs/predictions",
      "shortName": "pred",
      "lengthMax": 512,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics and underscores. Start with letter.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z][a-zA-Z0-9_]{0,511}$",
      "staticValue": "",
      "values": {
        "SEPARATOR": "_"
      }
    }
  },
  "CustomerInsights/hubs/profiles": {
    "$id": "default.templates.customerinsights/hubs/profiles",
    "properties": {
      "name": "CustomerInsights/hubs/profiles",
      "shortName": "prof",
      "lengthMax": 128,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics and underscores. Start with letter.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z][a-zA-Z0-9_]{0,127}$",
      "staticValue": "",
      "values": {
        "SEPARATOR": "_"
      }
    }
  },
  "CustomerInsights/hubs/relationshipLinks": {
    "$id": "default.templates.customerinsights/hubs/relationshiplinks",
    "properties": {
      "name": "CustomerInsights/hubs/relationshipLinks",
      "shortName": "rlink",
      "lengthMax": 512,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics and underscores. Start with letter.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z][a-zA-Z0-9_]{0,511}$",
      "staticValue": "",
      "values": {
        "SEPARATOR": "_"
      }
    }
  },
  "CustomerInsights/hubs/relationships": {
    "$id": "default.templates.customerinsights/hubs/relationships",
    "properties": {
      "name": "CustomerInsights/hubs/relationships",
      "shortName": "rel",
      "lengthMax": 512,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics and underscores. Start with letter.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z][a-zA-Z0-9_]{0,511}$",
      "staticValue": "",
      "values": {
        "SEPARATOR": "_"
      }
    }
  },
  "CustomerInsights/hubs/roleAssignments": {
    "$id": "default.templates.customerinsights/hubs/roleassignments",
    "properties": {
      "name": "CustomerInsights/hubs/roleAssignments",
      "shortName": "role",
      "lengthMax": 128,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics and underscores. Start with letter.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z][a-zA-Z0-9_]{0,127}$",
      "staticValue": "",
      "values": {
        "SEPARATOR": "_"
      }
    }
  },
  "CustomerInsights/hubs/views": {
    "$id": "default.templates.customerinsights/hubs/views",
    "properties": {
      "name": "CustomerInsights/hubs/views",
      "shortName": "view",
      "lengthMax": 512,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics and underscores. Start with letter.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z][a-zA-Z0-9_]{0,511}$",
      "staticValue": "",
      "values": {
        "SEPARATOR": "_"
      }
    }
  },
  "CustomProviders/associations": {
    "$id": "default.templates.customproviders/associations",
    "properties": {
      "name": "CustomProviders/associations",
      "shortName": "cpas",
      "lengthMax": 180,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Percent sign, ampersand, backslash, question mark, slash. Can't end with period or space.",
      "invalidCharacters": "%&\\?/",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": ". ",
      "regex": "^(?:[^%&\\\\?/\\. ]|[^%&\\\\?/]{1,179}[^. ])$",
      "staticValue": ""
    }
  },
  "CustomProviders/resourceProviders": {
    "$id": "default.templates.customproviders/resourceproviders",
    "properties": {
      "name": "CustomProviders/resourceProviders",
      "shortName": "cprep",
      "lengthMax": 64,
      "lengthMin": 3,
      "casing": "none",
      "validText": "",
      "invalidText": "Percent sign, ampersand, backslash, question mark, slash. Can't end with period or space.",
      "invalidCharacters": "%&\\?/",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": ". ",
      "regex": "^[^%&\\\\?/]{3,63}[^. ]$",
      "staticValue": "",
      "values": {
        "SEPARATOR": null
      }
    }
  },
  "DataBox/jobs": {
    "$id": "default.templates.databox/jobs",
    "properties": {
      "name": "DataBox/jobs",
      "shortName": "dbjob",
      "lengthMax": 24,
      "lengthMin": 3,
      "casing": "none",
      "validText": "Alphanumerics, hyphens, underscores and periods.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_\\.-]{3,24}$",
      "staticValue": ""
    }
  },
  "Databricks/workspaces": {
    "$id": "default.templates.databricks/workspaces",
    "properties": {
      "name": "Databricks/workspaces",
      "shortName": "dbw",
      "lengthMax": 30,
      "lengthMin": 3,
      "casing": "none",
      "validText": "Alphanumerics, underscores, and hyphens",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_-]{3,30}$",
      "staticValue": ""
    }
  },
  "DataFactory/factories": {
    "$id": "default.templates.datafactory/factories",
    "properties": {
      "name": "DataFactory/factories",
      "shortName": "adf",
      "lengthMax": 63,
      "lengthMin": 3,
      "casing": "none",
      "validText": "Alphanumerics and hyphens. Start and end with alphanumeric.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$",
      "staticValue": ""
    }
  },
  "DataFactory/factories/dataflows": {
    "$id": "default.templates.datafactory/factories/dataflows",
    "properties": {
      "name": "DataFactory/factories/dataflows",
      "shortName": "flow",
      "lengthMax": 260,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Start with alphanumeric.",
      "invalidText": "Angle brackets, asterisk, number sign, period, percent sign, ampersand, colon, backslash, question mark, plus sign, and slash",
      "invalidCharacters": "<>*#.%&:\\+?/",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9][^<>\\*#\\.%&:\\\\+\\?/]{0,259}$",
      "staticValue": ""
    }
  },
  "DataFactory/factories/datasets": {
    "$id": "default.templates.datafactory/factories/datasets",
    "properties": {
      "name": "DataFactory/factories/datasets",
      "shortName": "dset",
      "lengthMax": 260,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Start with alphanumeric.",
      "invalidText": "Angle brackets, asterisk, number sign, period, percent sign, ampersand, colon, backslash, question mark, plus sign, and slash",
      "invalidCharacters": "<>*#.%&:\\+?/",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9][^<>\\*#\\.%&:\\\\+\\?/]{0,259}$",
      "staticValue": ""
    }
  },
  "DataFactory/factories/integrationRuntimes": {
    "$id": "default.templates.datafactory/factories/integrationruntimes",
    "properties": {
      "name": "DataFactory/factories/integrationRuntimes",
      "shortName": "run",
      "lengthMax": 63,
      "lengthMin": 3,
      "casing": "none",
      "validText": "Alphanumerics and hyphens. Start and end with alphanumeric.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$",
      "staticValue": ""
    }
  },
  "DataFactory/factories/linkedservices": {
    "$id": "default.templates.datafactory/factories/linkedservices",
    "properties": {
      "name": "DataFactory/factories/linkedservices",
      "shortName": "lksvc",
      "lengthMax": 260,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Start with alphanumeric.",
      "invalidText": "Angle brackets, asterisk, number sign, period, percent sign, ampersand, colon, backslash, question mark, plus sign, and slash",
      "invalidCharacters": "<>*#.%&:\\+?/",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9][^<>\\*#\\.%&:\\\\+\\?/]{0,259}$",
      "staticValue": ""
    }
  },
  "DataFactory/factories/pipelines": {
    "$id": "default.templates.datafactory/factories/pipelines",
    "properties": {
      "name": "DataFactory/factories/pipelines",
      "shortName": "pipe",
      "lengthMax": 260,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Start with alphanumeric.",
      "invalidText": "Angle brackets, asterisk, number sign, period, percent sign, ampersand, colon, backslash, question mark, plus sign, and slash",
      "invalidCharacters": "<>*#.%&:\\+?/",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9][^<>\\*#\\.%&:\\\\+\\?/]{0,259}$",
      "staticValue": ""
    }
  },
  "DataFactory/factories/triggers": {
    "$id": "default.templates.datafactory/factories/triggers",
    "properties": {
      "name": "DataFactory/factories/triggers",
      "shortName": "trig",
      "lengthMax": 260,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Start with alphanumeric.",
      "invalidText": "Angle brackets, asterisk, number sign, period, percent sign, ampersand, colon, backslash, question mark, plus sign, and slash",
      "invalidCharacters": "<>*#.%&:\\+?/",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9][^<>\\*#\\.%&:\\\\+\\?/]{0,259}$",
      "staticValue": ""
    }
  },
  "DataFactory/factories/triggers/rerunTriggers": {
    "$id": "default.templates.datafactory/factories/triggers/reruntriggers",
    "properties": {
      "name": "DataFactory/factories/triggers/rerunTriggers",
      "shortName": "rerun",
      "lengthMax": 260,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Start with alphanumeric.",
      "invalidText": "Angle brackets, asterisk, number sign, period, percent sign, ampersand, colon, backslash, question mark, plus sign, and slash",
      "invalidCharacters": "<>*#.%&:\\+?/",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9][^<>\\*#\\.%&:\\\\+\\?/]{0,259}$",
      "staticValue": ""
    }
  },
  "DataLakeAnalytics/accounts": {
    "$id": "default.templates.datalakeanalytics/accounts",
    "properties": {
      "name": "DataLakeAnalytics/accounts",
      "shortName": "dla",
      "lengthMax": 24,
      "lengthMin": 3,
      "casing": "lower",
      "validText": "Lowercase letters and numbers.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-z0-9]{3,24}$",
      "staticValue": "",
      "values": {
        "SEPARATOR": null
      }
    }
  },
  "DataLakeAnalytics/accounts/computePolicies": {
    "$id": "default.templates.datalakeanalytics/accounts/computepolicies",
    "properties": {
      "name": "DataLakeAnalytics/accounts/computePolicies",
      "shortName": "cmpol",
      "lengthMax": 60,
      "lengthMin": 3,
      "casing": "none",
      "validText": "Alphanumerics, hyphens, and underscores.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_-]{3,60}$",
      "staticValue": ""
    }
  },
  "DataLakeAnalytics/accounts/dataLakeStoreAccounts": {
    "$id": "default.templates.datalakeanalytics/accounts/datalakestoreaccounts",
    "properties": {
      "name": "DataLakeAnalytics/accounts/dataLakeStoreAccounts",
      "shortName": "dlsta",
      "lengthMax": 24,
      "lengthMin": 3,
      "casing": "lower",
      "validText": "Lowercase letters and numbers.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-z0-9]{3,24}$",
      "staticValue": "",
      "values": {
        "SEPARATOR": null
      }
    }
  },
  "DataLakeAnalytics/accounts/firewallRules": {
    "$id": "default.templates.datalakeanalytics/accounts/firewallrules",
    "properties": {
      "name": "DataLakeAnalytics/accounts/firewallRules",
      "shortName": "rule",
      "lengthMax": 50,
      "lengthMin": 3,
      "casing": "none",
      "validText": "Alphanumerics, hyphens, and underscores.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_-]{3,50}$",
      "staticValue": ""
    }
  },
  "DataLakeAnalytics/accounts/storageAccounts": {
    "$id": "default.templates.datalakeanalytics/accounts/storageaccounts",
    "properties": {
      "name": "DataLakeAnalytics/accounts/storageAccounts",
      "shortName": "dlasa",
      "lengthMax": 60,
      "lengthMin": 3,
      "casing": "none",
      "validText": "Alphanumerics, hyphens, and underscores.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_-]{3,60}$",
      "staticValue": ""
    }
  },
  "DataLakeStore/accounts": {
    "$id": "default.templates.datalakestore/accounts",
    "properties": {
      "name": "DataLakeStore/accounts",
      "shortName": "dls",
      "lengthMax": 24,
      "lengthMin": 3,
      "casing": "lower",
      "validText": "Lowercase letters and numbers.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-z0-9]{3,24}$",
      "staticValue": "",
      "values": {
        "SEPARATOR": null
      }
    }
  },
  "DataLakeStore/accounts/firewallRules": {
    "$id": "default.templates.datalakestore/accounts/firewallrules",
    "properties": {
      "name": "DataLakeStore/accounts/firewallRules",
      "shortName": "rule",
      "lengthMax": 50,
      "lengthMin": 3,
      "casing": "none",
      "validText": "Alphanumerics, hyphens, and underscores.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_-]{3,50}$",
      "staticValue": ""
    }
  },
  "DataLakeStore/accounts/virtualNetworkRules": {
    "$id": "default.templates.datalakestore/accounts/virtualnetworkrules",
    "properties": {
      "name": "DataLakeStore/accounts/virtualNetworkRules",
      "shortName": "rule",
      "lengthMax": 50,
      "lengthMin": 3,
      "casing": "none",
      "validText": "Alphanumerics, hyphens, and underscores.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_-]{3,50}$",
      "staticValue": ""
    }
  },
  "DataMigration/services": {
    "$id": "default.templates.datamigration/services",
    "properties": {
      "name": "DataMigration/services",
      "shortName": "dms",
      "lengthMax": 62,
      "lengthMin": 2,
      "casing": "none",
      "validText": "Alphanumerics, hyphens, periods, and underscores. Start with alphanumeric",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9][a-zA-Z0-9_\\.-]{1,61}$",
      "staticValue": ""
    }
  },
  "DataMigration/services/projects": {
    "$id": "default.templates.datamigration/services/projects",
    "properties": {
      "name": "DataMigration/services/projects",
      "shortName": "proj",
      "lengthMax": 57,
      "lengthMin": 2,
      "casing": "none",
      "validText": "Alphanumerics, hyphens, periods, and underscores.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_\\.-]{2,57}$",
      "staticValue": ""
    }
  },
  "DBforMariaDB/servers": {
    "$id": "default.templates.dbformariadb/servers",
    "properties": {
      "name": "DBforMariaDB/servers",
      "shortName": "maria",
      "lengthMax": 63,
      "lengthMin": 3,
      "casing": "lower",
      "validText": "Lowercase letters, hyphens and numbers.",
      "invalidText": "Can't start or end with hyphen.",
      "invalidCharacters": "",
      "invalidCharactersStart": "-",
      "invalidCharactersEnd": "-",
      "invalidCharactersConsecutive": "",
      "regex": "^(?!-.*)(?!.*-$)[a-z0-9-]{3,63}$",
      "staticValue": ""
    }
  },
  "DBforMariaDB/servers/databases": {
    "$id": "default.templates.dbformariadb/servers/databases",
    "properties": {
      "name": "DBforMariaDB/servers/databases",
      "shortName": "mariadb",
      "lengthMax": 63,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics and hyphens.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9-]{1,63}$",
      "staticValue": ""
    }
  },
  "DBforMariaDB/servers/firewallRules": {
    "$id": "default.templates.dbformariadb/servers/firewallrules",
    "properties": {
      "name": "DBforMariaDB/servers/firewallRules",
      "shortName": "rule",
      "lengthMax": 128,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, hyphens, and underscores.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_-]{1,128}$",
      "staticValue": ""
    }
  },
  "DBforMariaDB/servers/virtualNetworkRules": {
    "$id": "default.templates.dbformariadb/servers/virtualnetworkrules",
    "properties": {
      "name": "DBforMariaDB/servers/virtualNetworkRules",
      "shortName": "rule",
      "lengthMax": 128,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics and hyphens.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9-]{1,128}$",
      "staticValue": ""
    }
  },
  "DBforMySQL/servers": {
    "$id": "default.templates.dbformysql/servers",
    "properties": {
      "name": "DBforMySQL/servers",
      "shortName": "mysql",
      "lengthMax": 63,
      "lengthMin": 3,
      "casing": "lower",
      "validText": "Lowercase letters, hyphens and numbers.",
      "invalidText": "Can't start or end with hyphen.",
      "invalidCharacters": "",
      "invalidCharactersStart": "-",
      "invalidCharactersEnd": "-",
      "invalidCharactersConsecutive": "",
      "regex": "^(?!-.*)(?!.*-$)[a-z0-9-]{3,63}$",
      "staticValue": ""
    }
  },
  "DBforMySQL/servers/databases": {
    "$id": "default.templates.dbformysql/servers/databases",
    "properties": {
      "name": "DBforMySQL/servers/databases",
      "shortName": "db",
      "lengthMax": 63,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics and hyphens.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9-]{1,63}$",
      "staticValue": ""
    }
  },
  "DBforMySQL/servers/firewallRules": {
    "$id": "default.templates.dbformysql/servers/firewallrules",
    "properties": {
      "name": "DBforMySQL/servers/firewallRules",
      "shortName": "rule",
      "lengthMax": 128,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, hyphens, and underscores.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_-]{1,128}$",
      "staticValue": ""
    }
  },
  "DBforMySQL/servers/virtualNetworkRules": {
    "$id": "default.templates.dbformysql/servers/virtualnetworkrules",
    "properties": {
      "name": "DBforMySQL/servers/virtualNetworkRules",
      "shortName": "rule",
      "lengthMax": 128,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics and hyphens.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9-]{1,128}$",
      "staticValue": ""
    }
  },
  "DBforPostgreSQL/servers": {
    "$id": "default.templates.dbforpostgresql/servers",
    "properties": {
      "name": "DBforPostgreSQL/servers",
      "shortName": "psql",
      "lengthMax": 63,
      "lengthMin": 3,
      "casing": "lower",
      "validText": "Lowercase letters, hyphens and numbers.",
      "invalidText": "Can't start or end with hyphen.",
      "invalidCharacters": "",
      "invalidCharactersStart": "-",
      "invalidCharactersEnd": "-",
      "invalidCharactersConsecutive": "",
      "regex": "^(?!-.*)(?!.*-$)[a-z0-9-]{3,63}$",
      "staticValue": ""
    }
  },
  "DBforPostgreSQL/servers/databases": {
    "$id": "default.templates.dbforpostgresql/servers/databases",
    "properties": {
      "name": "DBforPostgreSQL/servers/databases",
      "shortName": "db",
      "lengthMax": 63,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics and hyphens.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9-]{1,63}$",
      "staticValue": ""
    }
  },
  "DBforPostgreSQL/servers/firewallRules": {
    "$id": "default.templates.dbforpostgresql/servers/firewallrules",
    "properties": {
      "name": "DBforPostgreSQL/servers/firewallRules",
      "shortName": "rule",
      "lengthMax": 128,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, hyphens, and underscores.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_-]{1,128}$",
      "staticValue": ""
    }
  },
  "DBforPostgreSQL/servers/virtualNetworkRules": {
    "$id": "default.templates.dbforpostgresql/servers/virtualnetworkrules",
    "properties": {
      "name": "DBforPostgreSQL/servers/virtualNetworkRules",
      "shortName": "rule",
      "lengthMax": 128,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics and hyphens.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9-]{1,128}$",
      "staticValue": ""
    }
  },
  "Devices/IotHubs": {
    "$id": "default.templates.devices/iothubs",
    "properties": {
      "name": "Devices/IotHubs",
      "shortName": "iot",
      "lengthMax": 50,
      "lengthMin": 3,
      "casing": "none",
      "validText": "Alphanumerics and hyphens.",
      "invalidText": "Can't end with hyphen.",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "-",
      "invalidCharactersConsecutive": "",
      "regex": "^(?!.*-$)[a-zA-Z0-9-]{3,50}$",
      "staticValue": ""
    }
  },
  "Devices/IotHubs/certificates": {
    "$id": "default.templates.devices/iothubs/certificates",
    "properties": {
      "name": "Devices/IotHubs/certificates",
      "shortName": "cert",
      "lengthMax": 64,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, hyphens, periods, and underscores.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_\\.-]{1,64}$",
      "staticValue": ""
    }
  },
  "Devices/IotHubs/eventHubEndpoints/ConsumerGroups": {
    "$id": "default.templates.devices/iothubs/eventhubendpoints/consumergroups",
    "properties": {
      "name": "Devices/IotHubs/eventHubEndpoints/ConsumerGroups",
      "shortName": "congp",
      "lengthMax": 50,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, hyphens, periods, and underscores.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_\\.-]{1,50}$",
      "staticValue": ""
    }
  },
  "Devices/provisioningServices": {
    "$id": "default.templates.devices/provisioningservices",
    "properties": {
      "name": "Devices/provisioningServices",
      "shortName": "provs",
      "lengthMax": 64,
      "lengthMin": 3,
      "casing": "none",
      "validText": "Alphanumerics and hyphens. End with alphanumeric",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9-]{2,63}[a-zA-Z0-9])$",
      "staticValue": ""
    }
  },
  "Devices/provisioningServices/certificates": {
    "$id": "default.templates.devices/provisioningservices/certificates",
    "properties": {
      "name": "Devices/provisioningServices/certificates",
      "shortName": "pcert",
      "lengthMax": 64,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, hyphens, periods, and underscores.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_\\.-]{1,64}$",
      "staticValue": ""
    }
  },
  "DevTestLab/labs": {
    "$id": "default.templates.devtestlab/labs",
    "properties": {
      "name": "DevTestLab/labs",
      "shortName": "dtlab",
      "lengthMax": 50,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, underscores, and hyphens.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_-]{1,50}$",
      "staticValue": ""
    }
  },
  "DevTestLab/labs/customimages": {
    "$id": "default.templates.devtestlab/labs/customimages",
    "properties": {
      "name": "DevTestLab/labs/customimages",
      "shortName": "img",
      "lengthMax": 80,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, underscores, hyphens, and parentheses.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_()-]{1,80}$",
      "staticValue": ""
    }
  },
  "DevTestLab/labs/formulas": {
    "$id": "default.templates.devtestlab/labs/formulas",
    "properties": {
      "name": "DevTestLab/labs/formulas",
      "shortName": "form",
      "lengthMax": 80,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, underscores, hyphens, and parentheses.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_()-]{1,80}$",
      "staticValue": ""
    }
  },
  "DevTestLab/labs/virtualmachines::Linux": {
    "$id": "default.templates.devtestlab/labs/virtualmachines::linux",
    "properties": {
      "name": "DevTestLab/labs/virtualmachines::Linux",
      "shortName": "dvml",
      "lengthMax": 64,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics and hyphens. Start and end with alphanumeric.",
      "invalidText": "Can't be all numbers.",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?![0-9]+$)([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]{0,62}[a-zA-Z0-9])$",
      "staticValue": ""
    }
  },
  "DevTestLab/labs/virtualmachines::Windows": {
    "$id": "default.templates.devtestlab/labs/virtualmachines::windows",
    "properties": {
      "name": "DevTestLab/labs/virtualmachines::Windows",
      "shortName": "dvmw",
      "lengthMax": 15,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics and hyphens. Start and end with alphanumeric.",
      "invalidText": "Can't be all numbers.",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?![0-9]+$)([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]{0,13}[a-zA-Z0-9])$",
      "staticValue": ""
    }
  },
  "DocumentDB/databaseAccounts": {
    "$id": "default.templates.documentdb/databaseaccounts",
    "properties": {
      "name": "DocumentDB/databaseAccounts",
      "shortName": "cosgrm",
      "lengthMax": 44,
      "lengthMin": 3,
      "casing": "lower",
      "validText": "Lowercase letters, numbers, and hyphens. Start with lowercase letter or number.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-z0-9][a-z0-9-]{2,43}$",
      "staticValue": ""
    }
  },
  "DocumentDB/databaseAccounts/sqlDatabases": {
    "$id": "default.templates.documentdb/databaseaccounts/sqldatabases",
    "properties": {
      "name": "DocumentDB/databaseAccounts/sqlDatabases",
      "shortName": "cosmos",
      "lengthMax": null,
      "lengthMin": null,
      "casing": "none",
      "validText": "",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "",
      "staticValue": ""
    }
  },
  "EventGrid/domains": {
    "$id": "default.templates.eventgrid/domains",
    "properties": {
      "name": "EventGrid/domains",
      "shortName": "evgd",
      "lengthMax": 50,
      "lengthMin": 3,
      "casing": "none",
      "validText": "Alphanumerics and hyphens.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9-]{3,50}$",
      "staticValue": ""
    }
  },
  "EventGrid/domains/topics": {
    "$id": "default.templates.eventgrid/domains/topics",
    "properties": {
      "name": "EventGrid/domains/topics",
      "shortName": "evgt",
      "lengthMax": 50,
      "lengthMin": 3,
      "casing": "none",
      "validText": "Alphanumerics and hyphens.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9-]{3,50}$",
      "staticValue": ""
    }
  },
  "EventGrid/eventSubscriptions": {
    "$id": "default.templates.eventgrid/eventsubscriptions",
    "properties": {
      "name": "EventGrid/eventSubscriptions",
      "shortName": "evgs",
      "lengthMax": 64,
      "lengthMin": 3,
      "casing": "none",
      "validText": "Alphanumerics and hyphens.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9-]{3,64}$",
      "staticValue": ""
    }
  },
  "EventGrid/topics": {
    "$id": "default.templates.eventgrid/topics",
    "properties": {
      "name": "EventGrid/topics",
      "shortName": "egtp",
      "lengthMax": 50,
      "lengthMin": 3,
      "casing": "none",
      "validText": "Alphanumerics and hyphens.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9-]{3,50}$",
      "staticValue": ""
    }
  },
  "EventHub/clusters": {
    "$id": "default.templates.eventhub/clusters",
    "properties": {
      "name": "EventHub/clusters",
      "shortName": "evhcl",
      "lengthMax": 50,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics and hyphens. Start with letter. End with letter or number.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z]|[a-zA-Z][a-zA-Z0-9-]{0,48}[a-zA-Z0-9])$",
      "staticValue": ""
    }
  },
  "EventHub/namespaces": {
    "$id": "default.templates.eventhub/namespaces",
    "properties": {
      "name": "EventHub/namespaces",
      "shortName": "evhns",
      "lengthMax": 50,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics and hyphens. Start with letter. End with letter or number.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z]|[a-zA-Z][a-zA-Z0-9-]{0,48}[a-zA-Z0-9])$",
      "staticValue": ""
    }
  },
  "EventHub/namespaces/AuthorizationRules": {
    "$id": "default.templates.eventhub/namespaces/authorizationrules",
    "properties": {
      "name": "EventHub/namespaces/AuthorizationRules",
      "shortName": "rule",
      "lengthMax": 50,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, periods, hyphens and underscores. Start and end with letter or number.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\.-]{0,48}[a-zA-Z0-9])$",
      "staticValue": ""
    }
  },
  "EventHub/namespaces/disasterRecoveryConfigs": {
    "$id": "default.templates.eventhub/namespaces/disasterrecoveryconfigs",
    "properties": {
      "name": "EventHub/namespaces/disasterRecoveryConfigs",
      "shortName": "drcfg",
      "lengthMax": 50,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, periods, hyphens and underscores. Start and end with letter or number.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\.-]{0,48}[a-zA-Z0-9])$",
      "staticValue": ""
    }
  },
  "EventHub/namespaces/eventhubs": {
    "$id": "default.templates.eventhub/namespaces/eventhubs",
    "properties": {
      "name": "EventHub/namespaces/eventhubs",
      "shortName": "evh",
      "lengthMax": 50,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, periods, hyphens and underscores. Start and end with letter or number.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\.-]{0,48}[a-zA-Z0-9])$",
      "staticValue": ""
    }
  },
  "EventHub/namespaces/eventhubs/authorizationRules": {
    "$id": "default.templates.eventhub/namespaces/eventhubs/authorizationrules",
    "properties": {
      "name": "EventHub/namespaces/eventhubs/authorizationRules",
      "shortName": "rule",
      "lengthMax": 50,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, periods, hyphens and underscores. Start and end with letter or number.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\.-]{0,48}[a-zA-Z0-9])$",
      "staticValue": ""
    }
  },
  "EventHub/namespaces/eventhubs/consumergroups": {
    "$id": "default.templates.eventhub/namespaces/eventhubs/consumergroups",
    "properties": {
      "name": "EventHub/namespaces/eventhubs/consumergroups",
      "shortName": "cgrp",
      "lengthMax": 50,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, periods, hyphens and underscores. Start and end with letter or number.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\.-]{0,48}[a-zA-Z0-9])$",
      "staticValue": ""
    }
  },
  "HDInsight/clusters::Hadoop": {
    "$id": "default.templates.hdinsight/clusters::hadoop",
    "properties": {
      "name": "HDInsight/clusters::Hadoop",
      "shortName": "hadoop",
      "lengthMax": 59,
      "lengthMin": 3,
      "casing": "none",
      "validText": "Alphanumerics and hyphens. Start and end with letter or number",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z][a-zA-Z0-9-]{1,57}[a-zA-Z0-9]$",
      "staticValue": ""
    }
  },
  "HDInsight/clusters::HBase": {
    "$id": "default.templates.hdinsight/clusters::hbase",
    "properties": {
      "name": "HDInsight/clusters::HBase",
      "shortName": "hbase",
      "lengthMax": 59,
      "lengthMin": 3,
      "casing": "none",
      "validText": "Alphanumerics and hyphens. Start and end with letter or number",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z][a-zA-Z0-9-]{1,57}[a-zA-Z0-9]$",
      "staticValue": ""
    }
  },
  "HDInsight/clusters::Kafka": {
    "$id": "default.templates.hdinsight/clusters::kafka",
    "properties": {
      "name": "HDInsight/clusters::Kafka",
      "shortName": "kafka",
      "lengthMax": 59,
      "lengthMin": 3,
      "casing": "none",
      "validText": "Alphanumerics and hyphens. Start and end with letter or number",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z][a-zA-Z0-9-]{1,57}[a-zA-Z0-9]$",
      "staticValue": ""
    }
  },
  "HDInsight/clusters::MLServices": {
    "$id": "default.templates.hdinsight/clusters::mlservices",
    "properties": {
      "name": "HDInsight/clusters::MLServices",
      "shortName": "mls",
      "lengthMax": 59,
      "lengthMin": 3,
      "casing": "none",
      "validText": "Alphanumerics and hyphens. Start and end with letter or number",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z][a-zA-Z0-9-]{1,57}[a-zA-Z0-9]$",
      "staticValue": ""
    }
  },
  "HDInsight/clusters::Spark": {
    "$id": "default.templates.hdinsight/clusters::spark",
    "properties": {
      "name": "HDInsight/clusters::Spark",
      "shortName": "spark",
      "lengthMax": 59,
      "lengthMin": 3,
      "casing": "none",
      "validText": "Alphanumerics and hyphens. Start and end with letter or number",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z][a-zA-Z0-9-]{1,57}[a-zA-Z0-9]$",
      "staticValue": ""
    }
  },
  "HDInsight/clusters::Storm": {
    "$id": "default.templates.hdinsight/clusters::storm",
    "properties": {
      "name": "HDInsight/clusters::Storm",
      "shortName": "storm",
      "lengthMax": 59,
      "lengthMin": 3,
      "casing": "none",
      "validText": "Alphanumerics and hyphens. Start and end with letter or number",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z][a-zA-Z0-9-]{1,57}[a-zA-Z0-9]$",
      "staticValue": ""
    }
  },
  "HybridCompute/machines": {
    "$id": "default.templates.hybridcompute/machines",
    "properties": {
      "name": "HybridCompute/machines",
      "shortName": "arcs",
      "lengthMax": null,
      "lengthMin": null,
      "casing": "none",
      "validText": "",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "",
      "staticValue": ""
    }
  },
  "ImportExport/jobs": {
    "$id": "default.templates.importexport/jobs",
    "properties": {
      "name": "ImportExport/jobs",
      "shortName": "iejob",
      "lengthMax": 64,
      "lengthMin": 2,
      "casing": "none",
      "validText": "Alphanumerics and hyphens. Start with letter.  ",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z][a-zA-Z0-9-]{1,63}$",
      "staticValue": ""
    }
  },
  "Insights/actionGroups": {
    "$id": "default.templates.insights/actiongroups",
    "properties": {
      "name": "Insights/actionGroups",
      "shortName": "ag",
      "lengthMax": 260,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Slash, ampersand, percent sign, backslash, and question mark. Can't end with space or period.",
      "invalidCharacters": "/&%\\?",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": ". ",
      "invalidCharactersConsecutive": "",
      "regex": "^(?!.*[\\.]$)(?!.* $)[^/&%\\\\?]{1,260}$",
      "staticValue": ""
    }
  },
  "Insights/activityLogAlerts": {
    "$id": "default.templates.insights/activitylogalerts",
    "properties": {
      "name": "Insights/activityLogAlerts",
      "shortName": "inala",
      "lengthMax": 260,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Angle brackets, asterisk, percent sign, curly brackets, ampersand, colon, backslash, question mark, plus sign, slash, and number sign. Can't end with space or period.",
      "invalidCharacters": "<>*%{}&:\\?+/#",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": ". ",
      "invalidCharactersConsecutive": "",
      "regex": "^(?!.*[\\.]$)(?!.* $)[^<>\\*%{}&:\\\\?\\+/#]{1,260}$",
      "staticValue": ""
    }
  },
  "Insights/components": {
    "$id": "default.templates.insights/components",
    "properties": {
      "name": "Insights/components",
      "shortName": "appi",
      "lengthMax": 260,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Percent sign, ampersand, backslash, question mark, and slash. Can't end with space or period.",
      "invalidCharacters": "%&\\?/",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": ". ",
      "invalidCharactersConsecutive": "",
      "regex": "^(?!.*[\\.]$)(?!.* $)[^%&\\\\?/]{1,260}$",
      "staticValue": ""
    }
  },
  "Insights/metricAlerts": {
    "$id": "default.templates.insights/metricalerts",
    "properties": {
      "name": "Insights/metricAlerts",
      "shortName": "inma",
      "lengthMax": 260,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Asterisk, number sign, ampersand, plus sign, colon, angle brackets, question mark, at sign, percent sign, curly brackets, backslash, and slash. Can't end with space or period.",
      "invalidCharacters": "*#&+:<>?@%{}/",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": ". ",
      "invalidCharactersConsecutive": "",
      "regex": "^(?!.*[\\.]$)(?!.* $)[^\\*#&\\+:<>\\?@%{}\\/]{1,260}$",
      "staticValue": ""
    }
  },
  "Insights/scheduledQueryRules": {
    "$id": "default.templates.insights/scheduledqueryrules",
    "properties": {
      "name": "Insights/scheduledQueryRules",
      "shortName": "insqr",
      "lengthMax": 260,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Asterisk, angle brackets, percent sign, curly brackets, ampersand, colon backslash, question mark, slash, and number sign. Can't end with space or period.",
      "invalidCharacters": "*<>%{}&:\\?/#",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": ". ",
      "invalidCharactersConsecutive": "",
      "regex": "^(?!.*[\\.]$)(?!.* $)[^\\*<>%{}&:\\\\?/#]{1,260}$",
      "staticValue": ""
    }
  },
  "IoTCentral/IoTApps": {
    "$id": "default.templates.iotcentral/iotapps",
    "properties": {
      "name": "IoTCentral/IoTApps",
      "shortName": "iotapp",
      "lengthMax": 63,
      "lengthMin": 2,
      "casing": "lower",
      "validText": "Lowercase letters, numbers and hyphens. Start with lowercase letter or number",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-z0-9][a-z0-9-]{1,62}$",
      "staticValue": ""
    }
  },
  "KeyVault/vaults": {
    "$id": "default.templates.keyvault/vaults",
    "properties": {
      "name": "KeyVault/vaults",
      "shortName": "kv",
      "lengthMax": 24,
      "lengthMin": 3,
      "casing": "none",
      "validText": "Alphanumerics and hyphens. Start with letter. End with letter or number.",
      "invalidText": "Can't contain consecutive hyphens.",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "-",
      "regex": "^(?!.*-{2}.*)([a-zA-Z][a-zA-Z0-9-]{1,22}[a-zA-Z0-9])$",
      "staticValue": ""
    }
  },
  "KeyVault/vaults/secrets": {
    "$id": "default.templates.keyvault/vaults/secrets",
    "properties": {
      "name": "KeyVault/vaults/secrets",
      "shortName": "kvs",
      "lengthMax": 127,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics and hyphens.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9-]{1,127}$",
      "staticValue": ""
    }
  },
  "Kubernetes/connectedClusters": {
    "$id": "default.templates.kubernetes/connectedclusters",
    "properties": {
      "name": "Kubernetes/connectedClusters",
      "shortName": "arck",
      "lengthMax": null,
      "lengthMin": null,
      "casing": "none",
      "validText": "",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "",
      "staticValue": ""
    }
  },
  "Kusto/clusters": {
    "$id": "default.templates.kusto/clusters",
    "properties": {
      "name": "Kusto/clusters",
      "shortName": "dec",
      "lengthMax": 22,
      "lengthMin": 4,
      "casing": "lower",
      "validText": "Lowercase letters and numbers. Start with letter.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-z][a-z0-9]{3,21}$",
      "staticValue": "",
      "values": {
        "SEPARATOR": null
      }
    }
  },
  "Kusto/clusters/databases": {
    "$id": "default.templates.kusto/clusters/databases",
    "properties": {
      "name": "Kusto/clusters/databases",
      "shortName": "dedb",
      "lengthMax": 260,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, hyphens, spaces, and periods.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9-\\. ]{1,260}$",
      "staticValue": ""
    }
  },
  "Kusto/clusters/databases/dataConnections": {
    "$id": "default.templates.kusto/clusters/databases/dataconnections",
    "properties": {
      "name": "Kusto/clusters/databases/dataConnections",
      "shortName": "dcon",
      "lengthMax": 40,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, hyphens, spaces, and periods.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9-\\. ]{1,40}$",
      "staticValue": ""
    }
  },
  "Kusto/clusters/databases/eventhubconnections": {
    "$id": "default.templates.kusto/clusters/databases/eventhubconnections",
    "properties": {
      "name": "Kusto/clusters/databases/eventhubconnections",
      "shortName": "ehcon",
      "lengthMax": 40,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, hyphens, spaces, and periods.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9-\\. ]{1,40}$",
      "staticValue": ""
    }
  },
  "Logic/integrationAccounts": {
    "$id": "default.templates.logic/integrationaccounts",
    "properties": {
      "name": "Logic/integrationAccounts",
      "shortName": "ia",
      "lengthMax": 80,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, hyphens, underscores, periods, and parenthesis.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_\\.()-]{1,80}$",
      "staticValue": ""
    }
  },
  "Logic/integrationAccounts/assemblies": {
    "$id": "default.templates.logic/integrationaccounts/assemblies",
    "properties": {
      "name": "Logic/integrationAccounts/assemblies",
      "shortName": "assem",
      "lengthMax": 80,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, hyphens, underscores, periods, and parenthesis.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_\\.()-]{1,80}$",
      "staticValue": ""
    }
  },
  "Logic/integrationAccounts/batchConfigurations": {
    "$id": "default.templates.logic/integrationaccounts/batchconfigurations",
    "properties": {
      "name": "Logic/integrationAccounts/batchConfigurations",
      "shortName": "bconf",
      "lengthMax": 20,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9]{1,20}$",
      "staticValue": ""
    }
  },
  "Logic/integrationAccounts/certificates": {
    "$id": "default.templates.logic/integrationaccounts/certificates",
    "properties": {
      "name": "Logic/integrationAccounts/certificates",
      "shortName": "cert",
      "lengthMax": 80,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, hyphens, underscores, periods, and parenthesis.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_\\.()-]{1,80}$",
      "staticValue": ""
    }
  },
  "Logic/integrationAccounts/maps": {
    "$id": "default.templates.logic/integrationaccounts/maps",
    "properties": {
      "name": "Logic/integrationAccounts/maps",
      "shortName": "map",
      "lengthMax": 80,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, hyphens, underscores, periods, and parenthesis.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_\\.()-]{1,80}$",
      "staticValue": ""
    }
  },
  "Logic/integrationAccounts/partners": {
    "$id": "default.templates.logic/integrationaccounts/partners",
    "properties": {
      "name": "Logic/integrationAccounts/partners",
      "shortName": "part",
      "lengthMax": 80,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, hyphens, underscores, periods, and parenthesis.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_\\.()-]{1,80}$",
      "staticValue": ""
    }
  },
  "Logic/integrationAccounts/rosettanetprocessconfigurations": {
    "$id": "default.templates.logic/integrationaccounts/rosettanetprocessconfigurations",
    "properties": {
      "name": "Logic/integrationAccounts/rosettanetprocessconfigurations",
      "shortName": "rpcnf",
      "lengthMax": 80,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, hyphens, underscores, periods, and parenthesis.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_\\.()-]{1,80}$",
      "staticValue": ""
    }
  },
  "Logic/integrationAccounts/schemas": {
    "$id": "default.templates.logic/integrationaccounts/schemas",
    "properties": {
      "name": "Logic/integrationAccounts/schemas",
      "shortName": "schem",
      "lengthMax": 80,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, hyphens, underscores, periods, and parenthesis.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_\\.()-]{1,80}$",
      "staticValue": ""
    }
  },
  "Logic/integrationAccounts/sessions": {
    "$id": "default.templates.logic/integrationaccounts/sessions",
    "properties": {
      "name": "Logic/integrationAccounts/sessions",
      "shortName": "ses",
      "lengthMax": 80,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, hyphens, underscores, periods, and parenthesis.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_\\.()-]{1,80}$",
      "staticValue": ""
    }
  },
  "Logic/integrationServiceEnvironments": {
    "$id": "default.templates.logic/integrationserviceenvironments",
    "properties": {
      "name": "Logic/integrationServiceEnvironments",
      "shortName": "lise",
      "lengthMax": 80,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, hyphens, periods, and underscores.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_\\.-]{1,80}$",
      "staticValue": ""
    }
  },
  "Logic/integrationServiceEnvironments/managedApis": {
    "$id": "default.templates.logic/integrationserviceenvironments/managedapis",
    "properties": {
      "name": "Logic/integrationServiceEnvironments/managedApis",
      "shortName": "mapi",
      "lengthMax": 80,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, hyphens, periods, and underscores.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_\\.-]{1,80}$",
      "staticValue": ""
    }
  },
  "Logic/workflows": {
    "$id": "default.templates.logic/workflows",
    "properties": {
      "name": "Logic/workflows",
      "shortName": "logic",
      "lengthMax": 80,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, hyphens, underscores, periods, and parenthesis.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_\\.()-]{1,80}$",
      "staticValue": ""
    }
  },
  "MachineLearning/commitmentPlans": {
    "$id": "default.templates.machinelearning/commitmentplans",
    "properties": {
      "name": "MachineLearning/commitmentPlans",
      "shortName": "mlcp",
      "lengthMax": 260,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Angle brackets, asterisk, percent sign, ampersand, colon, backslash, question mark, plus sign, and slash. Can't end with a space.",
      "invalidCharacters": "<>*%&:?+/\\",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?!.* $)[^<>\\*%&:\\+\\/\\?]{1,260}$",
      "staticValue": ""
    }
  },
  "MachineLearning/webServices": {
    "$id": "default.templates.machinelearning/webservices",
    "properties": {
      "name": "MachineLearning/webServices",
      "shortName": "mlweb",
      "lengthMax": 260,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Angle brackets, asterisk, percent sign, ampersand, colon, backslash, question mark, plus sign, and slash. Can't end with a space.",
      "invalidCharacters": "<>*%&:?+/\\",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?!.* $)[^<>\\*%&:\\+\\/\\?]{1,260}$",
      "staticValue": ""
    }
  },
  "MachineLearning/workspaces": {
    "$id": "default.templates.machinelearning/workspaces",
    "properties": {
      "name": "MachineLearning/workspaces",
      "shortName": "mlws",
      "lengthMax": 260,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Angle brackets, asterisk, percent sign, ampersand, colon, backslash, question mark, plus sign, and slash. Can't end with a space.",
      "invalidCharacters": "<>*%&:?+/\\",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?!.* $)[^<>\\*%&:\\+\\/\\?]{1,260}$",
      "staticValue": ""
    }
  },
  "MachineLearningServices/workspaces": {
    "$id": "default.templates.machinelearningservices/workspaces",
    "properties": {
      "name": "MachineLearningServices/workspaces",
      "shortName": "mlw",
      "lengthMax": 33,
      "lengthMin": 3,
      "casing": "none",
      "validText": "Alphanumerics and hyphens.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9-]{3,33}$",
      "staticValue": ""
    }
  },
  "MachineLearningServices/workspaces/computes": {
    "$id": "default.templates.machinelearningservices/workspaces/computes",
    "properties": {
      "name": "MachineLearningServices/workspaces/computes",
      "shortName": "mlswc",
      "lengthMax": 16,
      "lengthMin": 2,
      "casing": "none",
      "validText": "Alphanumerics and hyphens.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9-]{2,16}$",
      "staticValue": ""
    }
  },
  "ManagedIdentity/userAssignedIdentities": {
    "$id": "default.templates.managedidentity/userassignedidentities",
    "properties": {
      "name": "ManagedIdentity/userAssignedIdentities",
      "shortName": "id",
      "lengthMax": 128,
      "lengthMin": 3,
      "casing": "none",
      "validText": "Alphanumerics, hyphens, and underscores. Start with letter or number.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,127}$",
      "staticValue": ""
    }
  },
  "Management/managementGroups": {
    "$id": "default.templates.management/managementgroups",
    "properties": {
      "name": "Management/managementGroups",
      "shortName": "mg",
      "lengthMax": null,
      "lengthMin": null,
      "casing": "none",
      "validText": "",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "",
      "staticValue": ""
    }
  },
  "Maps/accounts": {
    "$id": "default.templates.maps/accounts",
    "properties": {
      "name": "Maps/accounts",
      "shortName": "map",
      "lengthMax": 98,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, underscores, periods, and hyphens. Start with alphanumeric.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9][a-zA-Z0-9_\\.-]{0,97}$",
      "staticValue": ""
    }
  },
  "Media/mediaservices": {
    "$id": "default.templates.media/mediaservices",
    "properties": {
      "name": "Media/mediaservices",
      "shortName": "mms",
      "lengthMax": 24,
      "lengthMin": 3,
      "casing": "lower",
      "validText": "Lowercase letters and numbers.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-z0-9]{3,24}$",
      "staticValue": "",
      "values": {
        "SEPARATOR": null
      }
    }
  },
  "Media/mediaservices/liveEvents": {
    "$id": "default.templates.media/mediaservices/liveevents",
    "properties": {
      "name": "Media/mediaservices/liveEvents",
      "shortName": "lievt",
      "lengthMax": 32,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics and hyphens. Start with alphanumeric.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9][a-zA-Z0-9-]{0,31}$",
      "staticValue": ""
    }
  },
  "Media/mediaservices/liveEvents/liveOutputs": {
    "$id": "default.templates.media/mediaservices/liveevents/liveoutputs",
    "properties": {
      "name": "Media/mediaservices/liveEvents/liveOutputs",
      "shortName": "liout",
      "lengthMax": 256,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics and hyphens. Start with alphanumeric.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9][a-zA-Z0-9-]{0,255}$",
      "staticValue": ""
    }
  },
  "Media/mediaservices/streamingEndpoints": {
    "$id": "default.templates.media/mediaservices/streamingendpoints",
    "properties": {
      "name": "Media/mediaservices/streamingEndpoints",
      "shortName": "strep",
      "lengthMax": 256,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics and hyphens.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9-]{1,256}$",
      "staticValue": ""
    }
  },
  "Migrate/assessmentProjects": {
    "$id": "default.templates.migrate/assessmentprojects",
    "properties": {
      "name": "Migrate/assessmentProjects",
      "shortName": "migr",
      "lengthMax": null,
      "lengthMin": null,
      "casing": "none",
      "validText": "",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "",
      "staticValue": ""
    }
  },
  "Network/applicationGateways": {
    "$id": "default.templates.network/applicationgateways",
    "properties": {
      "name": "Network/applicationGateways",
      "shortName": "agw",
      "lengthMax": 24,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, underscores, periods, and hyphens. Start with alphanumeric. End with alphanumeric or underscore.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\.-]{0,22}[a-zA-Z0-9_])$",
      "staticValue": ""
    }
  },
  "Network/applicationSecurityGroups": {
    "$id": "default.templates.network/applicationsecuritygroups",
    "properties": {
      "name": "Network/applicationSecurityGroups",
      "shortName": "asg",
      "lengthMax": 80,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, underscores, periods, and hyphens. Start with alphanumeric. End with alphanumeric or underscore.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\.-]{0,78}[a-zA-Z0-9_])$",
      "staticValue": ""
    }
  },
  "Network/azureFirewalls": {
    "$id": "default.templates.network/azurefirewalls",
    "properties": {
      "name": "Network/azureFirewalls",
      "shortName": "afw",
      "lengthMax": 80,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, underscores, periods, and hyphens. Start with alphanumeric. End with alphanumeric or underscore.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\.-]{0,78}[a-zA-Z0-9_])$",
      "staticValue": ""
    }
  },
  "Network/bastionHosts": {
    "$id": "default.templates.network/bastionhosts",
    "properties": {
      "name": "Network/bastionHosts",
      "shortName": "bas",
      "lengthMax": 80,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, underscores, periods, and hyphens. Start with alphanumeric. End with alphanumeric or underscore.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\.-]{0,78}[a-zA-Z0-9_])$",
      "staticValue": ""
    }
  },
  "Network/connections": {
    "$id": "default.templates.network/connections",
    "properties": {
      "name": "Network/connections",
      "shortName": "con",
      "lengthMax": 80,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, underscores, periods, and hyphens. Start with alphanumeric. End with alphanumeric or underscore.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\.-]{0,78}[a-zA-Z0-9_])$",
      "staticValue": ""
    }
  },
  "Network/dnsZones": {
    "$id": "default.templates.network/dnszones",
    "properties": {
      "name": "Network/dnsZones",
      "shortName": "\\<*DNS domain name*>",
      "lengthMax": 63,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Each label can contain alphanumerics, underscores, and hyphens. Each label is a set of characters separated by a period. For example, contoso.com has 2 labels. 2 to 34 labels.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "us.contoso.net",
      "staticValue": "us.contoso.net",
      "template": "us.contoso.net"
    }
  },
  "Network/expressRouteCircuits": {
    "$id": "default.templates.network/expressroutecircuits",
    "properties": {
      "name": "Network/expressRouteCircuits",
      "shortName": "erc",
      "lengthMax": 80,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, underscores, periods, and hyphens. Start with alphanumeric. End alphanumeric or underscore.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\.-]{0,78}[a-zA-Z0-9_])$",
      "staticValue": ""
    }
  },
  "Network/firewallPolicies": {
    "$id": "default.templates.network/firewallpolicies",
    "properties": {
      "name": "Network/firewallPolicies",
      "shortName": "waf",
      "lengthMax": 80,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, underscores, periods, and hyphens. Start with alphanumeric. End alphanumeric or underscore.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\.-]{0,78}[a-zA-Z0-9_])$",
      "staticValue": ""
    }
  },
  "Network/firewallPolicies/ruleGroups": {
    "$id": "default.templates.network/firewallpolicies/rulegroups",
    "properties": {
      "name": "Network/firewallPolicies/ruleGroups",
      "shortName": "wafrg",
      "lengthMax": 80,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, underscores, periods, and hyphens. Start with alphanumeric. End alphanumeric or underscore.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\.-]{0,78}[a-zA-Z0-9_])$",
      "staticValue": ""
    }
  },
  "Network/frontDoors": {
    "$id": "default.templates.network/frontdoors",
    "properties": {
      "name": "Network/frontDoors",
      "shortName": "afd",
      "lengthMax": 64,
      "lengthMin": 3,
      "casing": "none",
      "validText": "Alphanumerics and hyphens. Start and end with alphanumeric.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9][a-zA-Z0-9-]{1,62}[a-zA-Z0-9]$",
      "staticValue": ""
    }
  },
  "Network/frontdoorWebApplicationFirewallPolicies": {
    "$id": "default.templates.network/frontdoorwebapplicationfirewallpolicies",
    "properties": {
      "name": "Network/frontdoorWebApplicationFirewallPolicies",
      "shortName": "fdfp",
      "lengthMax": 128,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics. Start with letter.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z]|[a-zA-Z][a-zA-Z0-9]{0,127})$",
      "staticValue": ""
    }
  },
  "Network/loadBalancers::external": {
    "$id": "default.templates.network/loadbalancers::external",
    "properties": {
      "name": "Network/loadBalancers::external",
      "shortName": "lbe",
      "lengthMax": 80,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, underscores, periods, and hyphens. Start with alphanumeric. End alphanumeric or underscore.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\.-]{0,78}[a-zA-Z0-9_])$",
      "staticValue": ""
    }
  },
  "Network/loadBalancers::internal": {
    "$id": "default.templates.network/loadbalancers::internal",
    "properties": {
      "name": "Network/loadBalancers::internal",
      "shortName": "lbi",
      "lengthMax": 80,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, underscores, periods, and hyphens. Start with alphanumeric. End alphanumeric or underscore.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\.-]{0,78}[a-zA-Z0-9_])$",
      "staticValue": ""
    }
  },
  "Network/loadBalancers/inboundNatRules": {
    "$id": "default.templates.network/loadbalancers/inboundnatrules",
    "properties": {
      "name": "Network/loadBalancers/inboundNatRules",
      "shortName": "rule",
      "lengthMax": 80,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, underscores, periods, and hyphens. Start with alphanumeric. End alphanumeric or underscore.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\.-]{0,78}[a-zA-Z0-9_])$",
      "staticValue": ""
    }
  },
  "Network/localNetworkGateways": {
    "$id": "default.templates.network/localnetworkgateways",
    "properties": {
      "name": "Network/localNetworkGateways",
      "shortName": "lgw",
      "lengthMax": 80,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, underscores, periods, and hyphens. Start with alphanumeric. End alphanumeric or underscore.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\.-]{0,78}[a-zA-Z0-9_])$",
      "staticValue": ""
    }
  },
  "Network/networkInterfaces": {
    "$id": "default.templates.network/networkinterfaces",
    "properties": {
      "name": "Network/networkInterfaces",
      "shortName": "nic",
      "lengthMax": 80,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, underscores, periods, and hyphens. Start with alphanumeric. End alphanumeric or underscore.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\.-]{0,78}[a-zA-Z0-9_])$",
      "staticValue": ""
    }
  },
  "Network/networkSecurityGroups": {
    "$id": "default.templates.network/networksecuritygroups",
    "properties": {
      "name": "Network/networkSecurityGroups",
      "shortName": "nsg",
      "lengthMax": 80,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, underscores, periods, and hyphens. Start with alphanumeric. End alphanumeric or underscore.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\.-]{0,78}[a-zA-Z0-9_])$",
      "staticValue": ""
    }
  },
  "Network/networkSecurityGroups/securityRules": {
    "$id": "default.templates.network/networksecuritygroups/securityrules",
    "properties": {
      "name": "Network/networkSecurityGroups/securityRules",
      "shortName": "nsgsr",
      "lengthMax": 80,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, underscores, periods, and hyphens. Start with alphanumeric. End alphanumeric or underscore.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "AllowDnsTcpInbound,DenyFtpAnyOutbound",
      "staticValue": "AllowDnsTcpInbound,DenyFtpAnyOutbound",
      "template": "AllowDnsTcpInbound,DenyFtpAnyOutbound"
    }
  },
  "Network/networkWatchers": {
    "$id": "default.templates.network/networkwatchers",
    "properties": {
      "name": "Network/networkWatchers",
      "shortName": "nw",
      "lengthMax": 80,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, underscores, periods, and hyphens. Start with alphanumeric. End alphanumeric or underscore.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\.-]{0,78}[a-zA-Z0-9_])$",
      "staticValue": ""
    }
  },
  "Network/privateDnsZones": {
    "$id": "default.templates.network/privatednszones",
    "properties": {
      "name": "Network/privateDnsZones",
      "shortName": "\\<*DNS domain name*>",
      "lengthMax": 63,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Each label can contain alphanumerics, underscores, and hyphens. Each label is a set of characters separated by a period. For example, contoso.com has 2 labels. 2 to 34 labels.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "privatelink.file.core.windows.net",
      "staticValue": "privatelink.file.core.windows.net",
      "template": "privatelink.file.core.windows.net"
    }
  },
  "Network/privateDnsZones/virtualNetworkLinks": {
    "$id": "default.templates.network/privatednszones/virtualnetworklinks",
    "properties": {
      "name": "Network/privateDnsZones/virtualNetworkLinks",
      "shortName": "pdnsv",
      "lengthMax": 80,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, underscores, periods, and hyphens.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_\\.-]{1,80}$",
      "staticValue": ""
    }
  },
  "Network/privateEndpoints": {
    "$id": "default.templates.network/privateendpoints",
    "properties": {
      "name": "Network/privateEndpoints",
      "shortName": "pep",
      "lengthMax": 64,
      "lengthMin": 2,
      "casing": "none",
      "validText": "Alphanumerics, underscores, periods, and hyphens. Start with alphanumeric. End alphanumeric or underscore.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\\\.-]{0,78}[a-zA-Z0-9_])$",
      "staticValue": ""
    }
  },
  "Network/privateLinkServices": {
    "$id": "default.templates.network/privatelinkservices",
    "properties": {
      "name": "Network/privateLinkServices",
      "shortName": "pl",
      "lengthMax": 64,
      "lengthMin": 2,
      "casing": "none",
      "validText": "Alphanumerics, underscores, periods, and hyphens. Start with alphanumeric. End alphanumeric or underscore.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\\\.-]{0,78}[a-zA-Z0-9_])$",
      "staticValue": ""
    }
  },
  "Network/publicIPAddresses": {
    "$id": "default.templates.network/publicipaddresses",
    "properties": {
      "name": "Network/publicIPAddresses",
      "shortName": "pip",
      "lengthMax": 80,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, underscores, periods, and hyphens. Start with alphanumeric. End alphanumeric or underscore.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\.-]{0,78}[a-zA-Z0-9_])$",
      "staticValue": ""
    }
  },
  "Network/publicIPPrefixes": {
    "$id": "default.templates.network/publicipprefixes",
    "properties": {
      "name": "Network/publicIPPrefixes",
      "shortName": "ippre",
      "lengthMax": null,
      "lengthMin": null,
      "casing": "none",
      "validText": "",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "",
      "staticValue": ""
    }
  },
  "Network/routeFilters": {
    "$id": "default.templates.network/routefilters",
    "properties": {
      "name": "Network/routeFilters",
      "shortName": "rf",
      "lengthMax": 80,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, underscores, periods, and hyphens.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_\\.-]{1,80}$",
      "staticValue": ""
    }
  },
  "Network/routeFilters/routeFilterRules": {
    "$id": "default.templates.network/routefilters/routefilterrules",
    "properties": {
      "name": "Network/routeFilters/routeFilterRules",
      "shortName": "nrfrr",
      "lengthMax": 80,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, underscores, periods, and hyphens. Start with alphanumeric. End alphanumeric or underscore.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\.-]{0,78}[a-zA-Z0-9_])$",
      "staticValue": ""
    }
  },
  "Network/routeTables": {
    "$id": "default.templates.network/routetables",
    "properties": {
      "name": "Network/routeTables",
      "shortName": "rt",
      "lengthMax": null,
      "lengthMin": null,
      "casing": "none",
      "validText": "",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "",
      "staticValue": ""
    }
  },
  "Network/routeTables/routes": {
    "$id": "default.templates.network/routetables/routes",
    "properties": {
      "name": "Network/routeTables/routes",
      "shortName": "udr",
      "lengthMax": 80,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, underscores, periods, and hyphens.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_\\.-]{1,80}$",
      "staticValue": ""
    }
  },
  "Network/serviceEndpointPolicies": {
    "$id": "default.templates.network/serviceendpointpolicies",
    "properties": {
      "name": "Network/serviceEndpointPolicies",
      "shortName": "se",
      "lengthMax": 80,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, underscores, periods, and hyphens. Start with alphanumeric. End alphanumeric or underscore.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\.-]{0,78}[a-zA-Z0-9_])$",
      "staticValue": ""
    }
  },
  "Network/trafficManagerProfiles": {
    "$id": "default.templates.network/trafficmanagerprofiles",
    "properties": {
      "name": "Network/trafficManagerProfiles",
      "shortName": "traf",
      "lengthMax": null,
      "lengthMin": null,
      "casing": "none",
      "validText": "",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "",
      "staticValue": ""
    }
  },
  "Network/virtualNetworkGateways": {
    "$id": "default.templates.network/virtualnetworkgateways",
    "properties": {
      "name": "Network/virtualNetworkGateways",
      "shortName": "vgw",
      "lengthMax": 80,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, underscores, periods, and hyphens.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_\\.-]{1,80}$",
      "staticValue": ""
    }
  },
  "Network/virtualNetworks": {
    "$id": "default.templates.network/virtualnetworks",
    "properties": {
      "name": "Network/virtualNetworks",
      "shortName": "vnet",
      "lengthMax": 64,
      "lengthMin": 2,
      "casing": "none",
      "validText": "Alphanumerics, underscores, periods, and hyphens. Start with alphanumeric. End alphanumeric or underscore.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\.-]{0,78}[a-zA-Z0-9_])$",
      "staticValue": ""
    }
  },
  "Network/virtualnetworks/subnets": {
    "$id": "default.templates.network/virtualnetworks/subnets",
    "properties": {
      "name": "Network/virtualnetworks/subnets",
      "shortName": "snet",
      "lengthMax": 80,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, underscores, periods, and hyphens. Start with alphanumeric. End alphanumeric or underscore.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\.-]{0,78}[a-zA-Z0-9_])$",
      "staticValue": ""
    }
  },
  "Network/virtualNetworks/virtualNetworkPeerings": {
    "$id": "default.templates.network/virtualnetworks/virtualnetworkpeerings",
    "properties": {
      "name": "Network/virtualNetworks/virtualNetworkPeerings",
      "shortName": "peer",
      "lengthMax": 80,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, underscores, periods, and hyphens. Start with alphanumeric. End alphanumeric or underscore.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\.-]{0,78}[a-zA-Z0-9_])$",
      "staticValue": ""
    }
  },
  "Network/virtualWans": {
    "$id": "default.templates.network/virtualwans",
    "properties": {
      "name": "Network/virtualWans",
      "shortName": "vwan",
      "lengthMax": 80,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, underscores, periods, and hyphens. Start with alphanumeric. End alphanumeric or underscore.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\.-]{0,78}[a-zA-Z0-9_])$",
      "staticValue": ""
    }
  },
  "Network/vpnGateways": {
    "$id": "default.templates.network/vpngateways",
    "properties": {
      "name": "Network/vpnGateways",
      "shortName": "vpng",
      "lengthMax": 80,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, underscores, periods, and hyphens. Start with alphanumeric. End alphanumeric or underscore.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\.-]{0,78}[a-zA-Z0-9_])$",
      "staticValue": ""
    }
  },
  "Network/vpnGateways/vpnConnections": {
    "$id": "default.templates.network/vpngateways/vpnconnections",
    "properties": {
      "name": "Network/vpnGateways/vpnConnections",
      "shortName": "vcn",
      "lengthMax": 80,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, underscores, periods, and hyphens. Start with alphanumeric. End alphanumeric or underscore.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\.-]{0,78}[a-zA-Z0-9_])$",
      "staticValue": ""
    }
  },
  "Network/vpnSites": {
    "$id": "default.templates.network/vpnsites",
    "properties": {
      "name": "Network/vpnSites",
      "shortName": "vpn",
      "lengthMax": 80,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, underscores, periods, and hyphens. Start with alphanumeric. End alphanumeric or underscore.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_\\.-]{1,80}$",
      "staticValue": ""
    }
  },
  "NotificationHubs/namespaces": {
    "$id": "default.templates.notificationhubs/namespaces",
    "properties": {
      "name": "NotificationHubs/namespaces",
      "shortName": "ntfns",
      "lengthMax": 50,
      "lengthMin": 6,
      "casing": "none",
      "validText": "Alphanumerics and hyphens. Start with letter. End with alphanumeric.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9-]{6,50}$",
      "staticValue": ""
    }
  },
  "NotificationHubs/namespaces/AuthorizationRules": {
    "$id": "default.templates.notificationhubs/namespaces/authorizationrules",
    "properties": {
      "name": "NotificationHubs/namespaces/AuthorizationRules",
      "shortName": "rule",
      "lengthMax": 256,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, periods, hyphens, and underscores. Start alphanumeric.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_\\.-]{1,256}$",
      "staticValue": ""
    }
  },
  "NotificationHubs/namespaces/notificationHubs": {
    "$id": "default.templates.notificationhubs/namespaces/notificationhubs",
    "properties": {
      "name": "NotificationHubs/namespaces/notificationHubs",
      "shortName": "ntf",
      "lengthMax": 260,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, periods, hyphens, and underscores. Start alphanumeric.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_\\.-]{1,260}$",
      "staticValue": ""
    }
  },
  "NotificationHubs/namespaces/notificationHubs/AuthorizationRules": {
    "$id": "default.templates.notificationhubs/namespaces/notificationhubs/authorizationrules",
    "properties": {
      "name": "NotificationHubs/namespaces/notificationHubs/AuthorizationRules",
      "shortName": "rule",
      "lengthMax": 256,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, periods, hyphens, and underscores.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_\\.-]{1,256}$",
      "staticValue": ""
    }
  },
  "OperationalInsights/clusters": {
    "$id": "default.templates.operationalinsights/clusters",
    "properties": {
      "name": "OperationalInsights/clusters",
      "shortName": "opic",
      "lengthMax": 63,
      "lengthMin": 4,
      "casing": "none",
      "validText": "Alphanumerics and hyphens. Start and end with alphanumeric.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9-]{4,63}$",
      "staticValue": ""
    }
  },
  "OperationalInsights/workspaces": {
    "$id": "default.templates.operationalinsights/workspaces",
    "properties": {
      "name": "OperationalInsights/workspaces",
      "shortName": "log",
      "lengthMax": 63,
      "lengthMin": 4,
      "casing": "none",
      "validText": "Alphanumerics and hyphens. Start and end with alphanumeric.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9-]{4,63}$",
      "staticValue": ""
    }
  },
  "OperationsManagement/solutions": {
    "$id": "default.templates.operationsmanagement/solutions",
    "properties": {
      "name": "OperationsManagement/solutions",
      "shortName": "opms",
      "lengthMax": null,
      "lengthMin": null,
      "casing": "none",
      "validText": "For solutions authored by Microsoft, the name must be in the pattern: SolutionType(WorkspaceName). For solutions authored by third parties, the name must be in the pattern: SolutionType[WorkspaceName]. For example, a valid name is: AntiMalware(contoso-IT). The solution type is case-sensitive.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "AntiMalware(contoso-IT)",
      "staticValue": "AntiMalware(contoso-IT)",
      "template": "AntiMalware(contoso-IT)"
    }
  },
  "Portal/dashboards": {
    "$id": "default.templates.portal/dashboards",
    "properties": {
      "name": "Portal/dashboards",
      "shortName": "pdash",
      "lengthMax": 160,
      "lengthMin": 3,
      "casing": "none",
      "validText": "Alphanumerics and hyphens.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9-]{3,160}$",
      "staticValue": ""
    }
  },
  "PowerBI/workspaceCollections": {
    "$id": "default.templates.powerbi/workspacecollections",
    "properties": {
      "name": "PowerBI/workspaceCollections",
      "shortName": "pbiwc",
      "lengthMax": 63,
      "lengthMin": 3,
      "casing": "none",
      "validText": "Alphanumerics and hyphens. ",
      "invalidText": "Can't start with hyphen. Can't use consecutive hyphens.",
      "invalidCharacters": "",
      "invalidCharactersStart": "-",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "-",
      "regex": "^(?!-.*)(?!.*-{2}.*)[a-zA-Z0-9][a-zA-Z0-9-]{2,62}$",
      "staticValue": ""
    }
  },
  "PowerBIDedicated/capacities": {
    "$id": "default.templates.powerbidedicated/capacities",
    "properties": {
      "name": "PowerBIDedicated/capacities",
      "shortName": "pbi",
      "lengthMax": 63,
      "lengthMin": 3,
      "casing": "lower",
      "validText": "Lowercase letters or numbers Start with lowercase letter. Start with lowercase letter.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-z][a-z0-9-]{1,61}[a-z0-9]$",
      "staticValue": ""
    }
  },
  "Purview/accounts": {
    "$id": "default.templates.purview/accounts",
    "properties": {
      "name": "Purview/accounts",
      "shortName": "pview",
      "lengthMax": null,
      "lengthMin": null,
      "casing": "none",
      "validText": "",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "",
      "staticValue": ""
    }
  },
  "RecoveryServices/vaults": {
    "$id": "default.templates.recoveryservices/vaults",
    "properties": {
      "name": "RecoveryServices/vaults",
      "shortName": "rsv",
      "lengthMax": 50,
      "lengthMin": 2,
      "casing": "none",
      "validText": "Alphanumerics and hyphens. Start with letter.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z][a-zA-Z0-9-]{1,49}$",
      "staticValue": ""
    }
  },
  "RecoveryServices/vaults/backupPolicies": {
    "$id": "default.templates.recoveryservices/vaults/backuppolicies",
    "properties": {
      "name": "RecoveryServices/vaults/backupPolicies",
      "shortName": "rsvbp",
      "lengthMax": 150,
      "lengthMin": 3,
      "casing": "none",
      "validText": "Alphanumerics and hyphens. Start with letter. ",
      "invalidText": "Can't end with hyphen",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "-",
      "invalidCharactersConsecutive": "",
      "regex": "^(?!.*-$)[a-zA-Z][a-zA-Z0-9-]{2,149}$",
      "staticValue": ""
    }
  },
  "Relay/namespaces": {
    "$id": "default.templates.relay/namespaces",
    "properties": {
      "name": "Relay/namespaces",
      "shortName": "rns",
      "lengthMax": 50,
      "lengthMin": 6,
      "casing": "none",
      "validText": "Alphanumerics and hyphens. Start with letter or number.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9][a-zA-Z0-9-]{5,49}$",
      "staticValue": ""
    }
  },
  "Relay/namespaces/AuthorizationRules": {
    "$id": "default.templates.relay/namespaces/authorizationrules",
    "properties": {
      "name": "Relay/namespaces/AuthorizationRules",
      "shortName": "rule",
      "lengthMax": 50,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, periods, hyphens and underscores. Start and end with alphanumeric.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\.-]{0,48}[a-zA-Z0-9])$",
      "staticValue": ""
    }
  },
  "Relay/namespaces/HybridConnections": {
    "$id": "default.templates.relay/namespaces/hybridconnections",
    "properties": {
      "name": "Relay/namespaces/HybridConnections",
      "shortName": "hycon",
      "lengthMax": 260,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, periods, hyphens, underscores, and slashes. Start and end with alphanumeric.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\.-/]{0,258}[a-zA-Z0-9])$",
      "staticValue": ""
    }
  },
  "Relay/namespaces/HybridConnections/authorizationRules": {
    "$id": "default.templates.relay/namespaces/hybridconnections/authorizationrules",
    "properties": {
      "name": "Relay/namespaces/HybridConnections/authorizationRules",
      "shortName": "rule",
      "lengthMax": 50,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, periods, hyphens and underscores. Start and end with alphanumeric.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\.-]{0,48}[a-zA-Z0-9])$",
      "staticValue": ""
    }
  },
  "Relay/namespaces/WcfRelays": {
    "$id": "default.templates.relay/namespaces/wcfrelays",
    "properties": {
      "name": "Relay/namespaces/WcfRelays",
      "shortName": "wcfr",
      "lengthMax": 260,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, periods, hyphens, underscores, and slashes. Start and end with alphanumeric.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\.-/]{0,258}[a-zA-Z0-9])$",
      "staticValue": ""
    }
  },
  "Relay/namespaces/WcfRelays/authorizationRules": {
    "$id": "default.templates.relay/namespaces/wcfrelays/authorizationrules",
    "properties": {
      "name": "Relay/namespaces/WcfRelays/authorizationRules",
      "shortName": "wcfra",
      "lengthMax": 50,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, periods, hyphens and underscores. Start and end with alphanumeric.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\.-]{0,48}[a-zA-Z0-9])$",
      "staticValue": ""
    }
  },
  "Resources/deployments": {
    "$id": "default.templates.resources/deployments",
    "properties": {
      "name": "Resources/deployments",
      "shortName": "dploy",
      "lengthMax": 64,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, underscores, parentheses, hyphens, and periods.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_\\.()-]{1,64}$",
      "staticValue": ""
    }
  },
  "Resources/resourcegroups": {
    "$id": "default.templates.resources/resourcegroups",
    "properties": {
      "name": "Resources/resourcegroups",
      "shortName": "rg",
      "lengthMax": 90,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, underscores, parentheses, hyphens, periods, and unicode characters that match the regex documentation.",
      "invalidText": "Can't end with period.",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": ".",
      "invalidCharactersConsecutive": "",
      "regex": "^(?!.*[\\.]$)[a-zA-Z0-9_\\.()-]{1,90}$",
      "staticValue": ""
    }
  },
  "Resources/tagNames": {
    "$id": "default.templates.resources/tagnames",
    "properties": {
      "name": "Resources/tagNames",
      "shortName": "rtn",
      "lengthMax": 512,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Angle brackets, percent sign, ampersand, backslash, question mark, and slash.",
      "invalidCharacters": "<>%&\\?/",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[^<>%&\\\\?/]{1,512}$",
      "staticValue": ""
    }
  },
  "Resources/tagNames/tagValues": {
    "$id": "default.templates.resources/tagnames/tagvalues",
    "properties": {
      "name": "Resources/tagNames/tagValues",
      "shortName": "rtnv",
      "lengthMax": 256,
      "lengthMin": 1,
      "casing": "none",
      "validText": "All characters.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^.{1,256}$",
      "staticValue": ""
    }
  },
  "Resources/templateSpecs": {
    "$id": "default.templates.resources/templatespecs",
    "properties": {
      "name": "Resources/templateSpecs",
      "shortName": "ts",
      "lengthMax": 90,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, underscores, parentheses, hyphens, and periods.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_\\.()-]{1,90}$",
      "staticValue": ""
    }
  },
  "Search/searchServices": {
    "$id": "default.templates.search/searchservices",
    "properties": {
      "name": "Search/searchServices",
      "shortName": "srch",
      "lengthMax": null,
      "lengthMin": null,
      "casing": "none",
      "validText": "",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "",
      "staticValue": ""
    }
  },
  "ServiceBus/namespaces": {
    "$id": "default.templates.servicebus/namespaces",
    "properties": {
      "name": "ServiceBus/namespaces",
      "shortName": "sbns",
      "lengthMax": 50,
      "lengthMin": 6,
      "casing": "none",
      "validText": "Alphanumerics and hyphens. Start with letter. End with alphanumeric.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z][a-zA-Z0-9-]{4,48}[a-zA-Z0-9]$",
      "staticValue": ""
    }
  },
  "ServiceBus/namespaces/AuthorizationRules": {
    "$id": "default.templates.servicebus/namespaces/authorizationrules",
    "properties": {
      "name": "ServiceBus/namespaces/AuthorizationRules",
      "shortName": "rule",
      "lengthMax": 50,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, periods, hyphens, and underscores. Start and end with alphnumeric.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\.-]{0,48}[a-zA-Z0-9])$",
      "staticValue": ""
    }
  },
  "ServiceBus/namespaces/disasterRecoveryConfigs": {
    "$id": "default.templates.servicebus/namespaces/disasterrecoveryconfigs",
    "properties": {
      "name": "ServiceBus/namespaces/disasterRecoveryConfigs",
      "shortName": "sbndc",
      "lengthMax": 50,
      "lengthMin": 6,
      "casing": "none",
      "validText": "Alphanumerics and hyphens. Start with letter. End with alphanumeric.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z][a-zA-Z0-9-]{4,48}[a-zA-Z0-9]$",
      "staticValue": ""
    }
  },
  "ServiceBus/namespaces/migrationConfigurations": {
    "$id": "default.templates.servicebus/namespaces/migrationconfigurations",
    "properties": {
      "name": "ServiceBus/namespaces/migrationConfigurations",
      "shortName": "migc",
      "lengthMax": null,
      "lengthMin": null,
      "casing": "none",
      "validText": "Should always be $default.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "$default",
      "staticValue": "$default",
      "template": "$default"
    }
  },
  "ServiceBus/namespaces/queues": {
    "$id": "default.templates.servicebus/namespaces/queues",
    "properties": {
      "name": "ServiceBus/namespaces/queues",
      "shortName": "sbq",
      "lengthMax": 260,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, periods, hyphens, underscores, and slashes. Start and end with alphnumeric.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\.-\\/]{0,258}[a-zA-Z0-9])$",
      "staticValue": ""
    }
  },
  "ServiceBus/namespaces/queues/authorizationRules": {
    "$id": "default.templates.servicebus/namespaces/queues/authorizationrules",
    "properties": {
      "name": "ServiceBus/namespaces/queues/authorizationRules",
      "shortName": "rule",
      "lengthMax": 50,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, periods, hyphens, and underscores. Start and end with alphnumeric.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\.-]{0,48}[a-zA-Z0-9])$",
      "staticValue": ""
    }
  },
  "ServiceBus/namespaces/topics": {
    "$id": "default.templates.servicebus/namespaces/topics",
    "properties": {
      "name": "ServiceBus/namespaces/topics",
      "shortName": "sbt",
      "lengthMax": 260,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, periods, hyphens, underscores, and slashes. Start and end with alphnumeric.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\.-\\/]{0,258}[a-zA-Z0-9])$",
      "staticValue": ""
    }
  },
  "ServiceBus/namespaces/topics/authorizationRules": {
    "$id": "default.templates.servicebus/namespaces/topics/authorizationrules",
    "properties": {
      "name": "ServiceBus/namespaces/topics/authorizationRules",
      "shortName": "rule",
      "lengthMax": 50,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, periods, hyphens, and underscores. Start and end with alphnumeric.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\.-]{0,48}[a-zA-Z0-9])$",
      "staticValue": ""
    }
  },
  "ServiceBus/namespaces/topics/subscriptions": {
    "$id": "default.templates.servicebus/namespaces/topics/subscriptions",
    "properties": {
      "name": "ServiceBus/namespaces/topics/subscriptions",
      "shortName": "sbts",
      "lengthMax": 50,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, periods, hyphens, and underscores. Start and end with alphnumeric.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\.-]{0,48}[a-zA-Z0-9])$",
      "staticValue": ""
    }
  },
  "ServiceBus/namespaces/topics/subscriptions/rules": {
    "$id": "default.templates.servicebus/namespaces/topics/subscriptions/rules",
    "properties": {
      "name": "ServiceBus/namespaces/topics/subscriptions/rules",
      "shortName": "rule",
      "lengthMax": 50,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, periods, hyphens, and underscores. Start and end with alphnumeric.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\.-]{0,48}[a-zA-Z0-9])$",
      "staticValue": ""
    }
  },
  "ServiceFabric/clusters": {
    "$id": "default.templates.servicefabric/clusters",
    "properties": {
      "name": "ServiceFabric/clusters",
      "shortName": "sf",
      "lengthMax": 23,
      "lengthMin": 4,
      "casing": "lower",
      "validText": "Lowercase letters, numbers, and hyphens. Start with lowercase letter. End with lowercase letter or number",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-z][a-z0-9-]{2,21}[a-z0-9]$",
      "staticValue": ""
    }
  },
  "SignalRService/signalR": {
    "$id": "default.templates.signalrservice/signalr",
    "properties": {
      "name": "SignalRService/signalR",
      "shortName": "sigr",
      "lengthMax": 63,
      "lengthMin": 3,
      "casing": "none",
      "validText": "Alphanumerics and hyphens. Start with letter. End with alphanumeric.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$",
      "staticValue": ""
    }
  },
  "Sql/managedInstances": {
    "$id": "default.templates.sql/managedinstances",
    "properties": {
      "name": "Sql/managedInstances",
      "shortName": "sqlmi",
      "lengthMax": 63,
      "lengthMin": 1,
      "casing": "lower",
      "validText": "Lowercase letters, numbers, and hyphens.",
      "invalidText": "Can't start or end with hyphen.",
      "invalidCharacters": "",
      "invalidCharactersStart": "-",
      "invalidCharactersEnd": "-",
      "invalidCharactersConsecutive": "",
      "regex": "^(?!-.*)(?!.*-$)[a-z0-9-]{1,63}$",
      "staticValue": ""
    }
  },
  "Sql/servers::database": {
    "$id": "default.templates.sql/servers::database",
    "properties": {
      "name": "Sql/servers::database",
      "shortName": "sql",
      "lengthMax": 63,
      "lengthMin": 1,
      "casing": "lower",
      "validText": "Lowercase letters, numbers, and hyphens.",
      "invalidText": "Can't start or end with hyphen.",
      "invalidCharacters": "",
      "invalidCharactersStart": "-",
      "invalidCharactersEnd": "-",
      "invalidCharactersConsecutive": "",
      "regex": "^(?!-.*)(?!.*-$)[a-z0-9-]{1,63}$",
      "staticValue": ""
    }
  },
  "Sql/servers::dataWarehouse": {
    "$id": "default.templates.sql/servers::datawarehouse",
    "properties": {
      "name": "Sql/servers::dataWarehouse",
      "shortName": "sqldw",
      "lengthMax": 63,
      "lengthMin": 1,
      "casing": "lower",
      "validText": "Lowercase letters, numbers, and hyphens.",
      "invalidText": "Can't start or end with hyphen.",
      "invalidCharacters": "",
      "invalidCharactersStart": "-",
      "invalidCharactersEnd": "-",
      "invalidCharactersConsecutive": "",
      "regex": "^(?!-.*)(?!.*-$)[a-z0-9-]{1,63}$",
      "staticValue": ""
    }
  },
  "Sql/servers/administrators": {
    "$id": "default.templates.sql/servers/administrators",
    "properties": {
      "name": "Sql/servers/administrators",
      "shortName": "sqlsa",
      "lengthMax": null,
      "lengthMin": null,
      "casing": "none",
      "validText": "Must be ActiveDirectory.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "ActiveDirectory",
      "staticValue": "ActiveDirectory",
      "template": "ActiveDirectory"
    }
  },
  "Sql/servers/databases": {
    "$id": "default.templates.sql/servers/databases",
    "properties": {
      "name": "Sql/servers/databases",
      "shortName": "sqlstrdb",
      "lengthMax": 128,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Angle brackets, asterisk, percent sign, ampersand, colon, backslash, slash, and question mark. Can't end with period or space.",
      "invalidCharacters": "<>*%&:/?",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": ". ",
      "invalidCharactersConsecutive": "",
      "regex": "^(?!.*[\\.]$)(?!.* $)[^<>\\*%&:\\/\\?]{1,128}$",
      "staticValue": ""
    }
  },
  "Sql/servers/databases/syncGroups": {
    "$id": "default.templates.sql/servers/databases/syncgroups",
    "properties": {
      "name": "Sql/servers/databases/syncGroups",
      "shortName": "sqlsg",
      "lengthMax": 150,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, hyphens, and underscores.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_-]{1,150}$",
      "staticValue": ""
    }
  },
  "Sql/servers/elasticPools": {
    "$id": "default.templates.sql/servers/elasticpools",
    "properties": {
      "name": "Sql/servers/elasticPools",
      "shortName": "sqlep",
      "lengthMax": 128,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Angle brackets, asterisk, percent sign, ampersand, colon, backslash, slash, and question mark. Can't end with period or space.",
      "invalidCharacters": "<>*%&:/?",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": ". ",
      "invalidCharactersConsecutive": "",
      "regex": "^(?!.*[\\.]$)(?!.* $)[^<>\\*%&:\\/\\?]{1,128}$",
      "staticValue": ""
    }
  },
  "Sql/servers/failoverGroups": {
    "$id": "default.templates.sql/servers/failovergroups",
    "properties": {
      "name": "Sql/servers/failoverGroups",
      "shortName": "sqlfg",
      "lengthMax": 63,
      "lengthMin": 1,
      "casing": "lower",
      "validText": "Lowercase letters, numbers, and hyphens.",
      "invalidText": "Can't start or end with hyphen.",
      "invalidCharacters": "",
      "invalidCharactersStart": "-",
      "invalidCharactersEnd": "-",
      "invalidCharactersConsecutive": "",
      "regex": "^(?!-.*)(?!.*-$)[a-z0-9-]{1,63}$",
      "staticValue": ""
    }
  },
  "Sql/servers/firewallRules": {
    "$id": "default.templates.sql/servers/firewallrules",
    "properties": {
      "name": "Sql/servers/firewallRules",
      "shortName": "sqlfw",
      "lengthMax": 128,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Angle brackets, asterisk, percent sign, ampersand, colon, backslash, slash, and question mark. Can't end with period.",
      "invalidCharacters": "<>*%&:;/?",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": ".",
      "invalidCharactersConsecutive": "",
      "regex": "^(?!.*[\\.]$)[^<>\\*%&:\\/\\?]{1,128}$",
      "staticValue": ""
    }
  },
  "Storage/blob": {
    "$id": "default.templates.storage/blob",
    "properties": {
      "name": "Storage/blob",
      "shortName": "sbl",
      "lengthMax": 1024,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Any URL characters, case sensitive.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[A-Za-z0-9-_\\.~]{1,1024}$",
      "staticValue": ""
    }
  },
  "Storage/queue": {
    "$id": "default.templates.storage/queue",
    "properties": {
      "name": "Storage/queue",
      "shortName": "squ",
      "lengthMax": 63,
      "lengthMin": 3,
      "casing": "lower",
      "validText": "Lowercase letters, numbers, and hyphens.",
      "invalidText": "Can't start or end with hyphen. Can't use consecutive hyphens.",
      "invalidCharacters": "",
      "invalidCharactersStart": "-",
      "invalidCharactersEnd": "-",
      "invalidCharactersConsecutive": "-",
      "regex": "^(?!-.*)(?!.*-$)(?!.*-{2}.*)[a-z0-9][a-z0-9-]{2,62}$",
      "staticValue": ""
    }
  },
  "Storage/storageAccounts": {
    "$id": "default.templates.storage/storageaccounts",
    "properties": {
      "name": "Storage/storageAccounts",
      "shortName": "st",
      "lengthMax": 24,
      "lengthMin": 3,
      "casing": "lower",
      "validText": "Lowercase letters and numbers.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-z0-9]{3,24}$",
      "staticValue": "",
      "values": {
        "SEPARATOR": null
      }
    }
  },
  "Storage/storageAccounts::VMStorageAccount": {
    "$id": "default.templates.storage/storageaccounts::vmstorageaccount",
    "properties": {
      "name": "Storage/storageAccounts::VMStorageAccount",
      "shortName": "stvm",
      "lengthMax": 24,
      "lengthMin": 3,
      "casing": "lower",
      "validText": "Lowercase letters and numbers.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-z0-9]{3,24}$",
      "staticValue": "",
      "values": {
        "SEPARATOR": null
      }
    }
  },
  "Storage/storageAccounts/blobServices": {
    "$id": "default.templates.storage/storageaccounts/blobservices",
    "properties": {
      "name": "Storage/storageAccounts/blobServices",
      "shortName": "stbl",
      "lengthMax": null,
      "lengthMin": null,
      "casing": "none",
      "validText": "Must be default.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "default",
      "staticValue": "default",
      "template": "default"
    }
  },
  "Storage/storageAccounts/blobServices/containers": {
    "$id": "default.templates.storage/storageaccounts/blobservices/containers",
    "properties": {
      "name": "Storage/storageAccounts/blobServices/containers",
      "shortName": "stblc",
      "lengthMax": 63,
      "lengthMin": 3,
      "casing": "lower",
      "validText": "Lowercase letters, numbers, and hyphens. Start with lowercase letter or number. ",
      "invalidText": "Can't use consecutive hyphens.",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "-",
      "regex": "^(?!.*-{2}.*)[a-z0-9][a-z0-9-]{2,62}$",
      "staticValue": ""
    }
  },
  "Storage/storageAccounts/fileServices": {
    "$id": "default.templates.storage/storageaccounts/fileservices",
    "properties": {
      "name": "Storage/storageAccounts/fileServices",
      "shortName": "stfs",
      "lengthMax": null,
      "lengthMin": null,
      "casing": "none",
      "validText": "Must be default.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "default",
      "staticValue": "default",
      "template": "default"
    }
  },
  "Storage/storageAccounts/fileServices/shares": {
    "$id": "default.templates.storage/storageaccounts/fileservices/shares",
    "properties": {
      "name": "Storage/storageAccounts/fileServices/shares",
      "shortName": "share",
      "lengthMax": 63,
      "lengthMin": 3,
      "casing": "lower",
      "validText": "Lowercase letters, numbers, and hyphens.",
      "invalidText": "Can't start or end with hyphen. Can't use consecutive hyphens.",
      "invalidCharacters": "",
      "invalidCharactersStart": "-",
      "invalidCharactersEnd": "-",
      "invalidCharactersConsecutive": "-",
      "regex": "^(?!-.*)(?!.*-$)(?!.*-{2}.*)[a-z0-9][a-z0-9-]{2,62}$",
      "staticValue": ""
    }
  },
  "Storage/storageAccounts/managementPolicies": {
    "$id": "default.templates.storage/storageaccounts/managementpolicies",
    "properties": {
      "name": "Storage/storageAccounts/managementPolicies",
      "shortName": "stmp",
      "lengthMax": null,
      "lengthMin": null,
      "casing": "none",
      "validText": "Must be default.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "default",
      "staticValue": "default",
      "template": "default"
    }
  },
  "Storage/table": {
    "$id": "default.templates.storage/table",
    "properties": {
      "name": "Storage/table",
      "shortName": "sta",
      "lengthMax": 63,
      "lengthMin": 3,
      "casing": "none",
      "validText": "Alphanumerics. Start with letter.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z][a-zA-Z0-9]{2,62}$",
      "staticValue": "",
      "values": {
        "SEPARATOR": null
      }
    }
  },
  "StorageSync/storageSyncServices": {
    "$id": "default.templates.storagesync/storagesyncservices",
    "properties": {
      "name": "StorageSync/storageSyncServices",
      "shortName": "sss",
      "lengthMax": 260,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, spaces, periods, hyphens, and underscores.",
      "invalidText": "Can't end with period or space.",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": ". ",
      "invalidCharactersConsecutive": "",
      "regex": "^(?!.*[\\.]$)(?!.* $)[a-zA-Z0-9_\\. -]{1,260}$",
      "staticValue": ""
    }
  },
  "StorageSync/storageSyncServices/syncGroups": {
    "$id": "default.templates.storagesync/storagesyncservices/syncgroups",
    "properties": {
      "name": "StorageSync/storageSyncServices/syncGroups",
      "shortName": "sgrp",
      "lengthMax": 260,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics, spaces, periods, hyphens, and underscores.",
      "invalidText": "Can't end with period or space.",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": ". ",
      "invalidCharactersConsecutive": "",
      "regex": "^(?!.*[\\.]$)(?!.* $)[a-zA-Z0-9_\\. -]{1,260}$",
      "staticValue": ""
    }
  },
  "StorSimple/managers": {
    "$id": "default.templates.storsimple/managers",
    "properties": {
      "name": "StorSimple/managers",
      "shortName": "ssimp",
      "lengthMax": 50,
      "lengthMin": 2,
      "casing": "none",
      "validText": "Alphanumerics and hyphens. Start with letter. End with alphanumeric.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z][a-zA-Z0-9-]{0,48}[a-zA-Z0-9]$",
      "staticValue": ""
    }
  },
  "StreamAnalytics/cluster": {
    "$id": "default.templates.streamanalytics/cluster",
    "properties": {
      "name": "StreamAnalytics/cluster",
      "shortName": "asa",
      "lengthMax": null,
      "lengthMin": null,
      "casing": "none",
      "validText": "",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "",
      "staticValue": ""
    }
  },
  "StreamAnalytics/streamingjobs": {
    "$id": "default.templates.streamanalytics/streamingjobs",
    "properties": {
      "name": "StreamAnalytics/streamingjobs",
      "shortName": "sasj",
      "lengthMax": 63,
      "lengthMin": 3,
      "casing": "none",
      "validText": "Alphanumerics, hyphens, and underscores.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_-]{3,63}$",
      "staticValue": ""
    }
  },
  "StreamAnalytics/streamingjobs/functions": {
    "$id": "default.templates.streamanalytics/streamingjobs/functions",
    "properties": {
      "name": "StreamAnalytics/streamingjobs/functions",
      "shortName": "sjf",
      "lengthMax": 63,
      "lengthMin": 3,
      "casing": "none",
      "validText": "Alphanumerics, hyphens, and underscores.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_-]{3,63}$",
      "staticValue": ""
    }
  },
  "StreamAnalytics/streamingjobs/inputs": {
    "$id": "default.templates.streamanalytics/streamingjobs/inputs",
    "properties": {
      "name": "StreamAnalytics/streamingjobs/inputs",
      "shortName": "sjin",
      "lengthMax": 63,
      "lengthMin": 3,
      "casing": "none",
      "validText": "Alphanumerics, hyphens, and underscores.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_-]{3,63}$",
      "staticValue": ""
    }
  },
  "StreamAnalytics/streamingjobs/outputs": {
    "$id": "default.templates.streamanalytics/streamingjobs/outputs",
    "properties": {
      "name": "StreamAnalytics/streamingjobs/outputs",
      "shortName": "sjout",
      "lengthMax": 63,
      "lengthMin": 3,
      "casing": "none",
      "validText": "Alphanumerics, hyphens, and underscores.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_-]{3,63}$",
      "staticValue": ""
    }
  },
  "StreamAnalytics/streamingjobs/transformations": {
    "$id": "default.templates.streamanalytics/streamingjobs/transformations",
    "properties": {
      "name": "StreamAnalytics/streamingjobs/transformations",
      "shortName": "sjtrf",
      "lengthMax": 63,
      "lengthMin": 3,
      "casing": "none",
      "validText": "Alphanumerics, hyphens, and underscores.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9_-]{3,63}$",
      "staticValue": ""
    }
  },
  "Subscription/subscriptions": {
    "$id": "default.templates.subscription/subscriptions",
    "properties": {
      "name": "Subscription/subscriptions",
      "shortName": "subcr",
      "lengthMax": null,
      "lengthMin": null,
      "casing": "none",
      "validText": "",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "",
      "staticValue": ""
    }
  },
  "Synapse/workspaces": {
    "$id": "default.templates.synapse/workspaces",
    "properties": {
      "name": "Synapse/workspaces",
      "shortName": "synw",
      "lengthMax": null,
      "lengthMin": null,
      "casing": "none",
      "validText": "",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "",
      "staticValue": ""
    }
  },
  "Synapse/workspaces/sqlPools::Spark": {
    "$id": "default.templates.synapse/workspaces/sqlpools::spark",
    "properties": {
      "name": "Synapse/workspaces/sqlPools::Spark",
      "shortName": "synsp",
      "lengthMax": null,
      "lengthMin": null,
      "casing": "none",
      "validText": "",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "",
      "staticValue": ""
    }
  },
  "Synapse/workspaces/sqlPools::SQLDedicated": {
    "$id": "default.templates.synapse/workspaces/sqlpools::sqldedicated",
    "properties": {
      "name": "Synapse/workspaces/sqlPools::SQLDedicated",
      "shortName": "syndp",
      "lengthMax": null,
      "lengthMin": null,
      "casing": "none",
      "validText": "",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "",
      "staticValue": ""
    }
  },
  "TimeSeriesInsights/environments": {
    "$id": "default.templates.timeseriesinsights/environments",
    "properties": {
      "name": "TimeSeriesInsights/environments",
      "shortName": "tsi",
      "lengthMax": 90,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Single quote, angle brackets, percent sign, ampersand, colon, backslash, question mark, slash, and number sign.",
      "invalidCharacters": "'<>%&:\\?/#",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[^'<>%&:\\\\?/#]{1,90}$",
      "staticValue": ""
    }
  },
  "TimeSeriesInsights/environments/accessPolicies": {
    "$id": "default.templates.timeseriesinsights/environments/accesspolicies",
    "properties": {
      "name": "TimeSeriesInsights/environments/accessPolicies",
      "shortName": "tsiea",
      "lengthMax": 90,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Single quote, angle brackets, percent sign, ampersand, colon, backslash, question mark, slash, and number sign.",
      "invalidCharacters": "'<>%&:\\?/#",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[^'<>%&:\\\\?/#]{1,90}$",
      "staticValue": ""
    }
  },
  "TimeSeriesInsights/environments/eventSources": {
    "$id": "default.templates.timeseriesinsights/environments/eventsources",
    "properties": {
      "name": "TimeSeriesInsights/environments/eventSources",
      "shortName": "tsiee",
      "lengthMax": 90,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Single quote, angle brackets, percent sign, ampersand, colon, backslash, question mark, slash, and number sign.",
      "invalidCharacters": "<>%&:\\?/#",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[^'<>%&:\\\\?/#]{1,90}$",
      "staticValue": ""
    }
  },
  "TimeSeriesInsights/environments/referenceDataSets": {
    "$id": "default.templates.timeseriesinsights/environments/referencedatasets",
    "properties": {
      "name": "TimeSeriesInsights/environments/referenceDataSets",
      "shortName": "tsier",
      "lengthMax": 63,
      "lengthMin": 3,
      "casing": "none",
      "validText": "Alphanumerics",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9]{3,63}$",
      "staticValue": "",
      "values": {
        "SEPARATOR": null
      }
    }
  },
  "Web/certificates": {
    "$id": "default.templates.web/certificates",
    "properties": {
      "name": "Web/certificates",
      "shortName": "wbcer",
      "lengthMax": 260,
      "lengthMin": 1,
      "casing": "none",
      "validText": "",
      "invalidText": "Slash",
      "invalidCharacters": "/",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^((?!\\/).){1,260}$",
      "staticValue": ""
    }
  },
  "Web/serverfarms": {
    "$id": "default.templates.web/serverfarms",
    "properties": {
      "name": "Web/serverfarms",
      "shortName": "asp",
      "lengthMax": 40,
      "lengthMin": 1,
      "casing": "none",
      "validText": "Alphanumerics and hyphens.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9-]{1,40}$",
      "staticValue": ""
    }
  },
  "Web/sites::AppServiceEnvironment": {
    "$id": "default.templates.web/sites::appserviceenvironment",
    "properties": {
      "name": "Web/sites::AppServiceEnvironment",
      "shortName": "ase",
      "lengthMax": 60,
      "lengthMin": 2,
      "casing": "none",
      "validText": "Contains alphanumerics and hyphens.",
      "invalidText": "Can't start or end with hyphen.",
      "invalidCharacters": "",
      "invalidCharactersStart": "-",
      "invalidCharactersEnd": "-",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9][a-zA-Z0-9-]{0,58}[a-zA-Z0-9]$",
      "staticValue": ""
    }
  },
  "Web/sites::AzureStaticWebApps": {
    "$id": "default.templates.web/sites::azurestaticwebapps",
    "properties": {
      "name": "Web/sites::AzureStaticWebApps",
      "shortName": "aswba",
      "lengthMax": 60,
      "lengthMin": 2,
      "casing": "none",
      "validText": "Contains alphanumerics and hyphens.",
      "invalidText": "Can't start or end with hyphen.",
      "invalidCharacters": "",
      "invalidCharactersStart": "-",
      "invalidCharactersEnd": "-",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9][a-zA-Z0-9-]{0,58}[a-zA-Z0-9]$",
      "staticValue": ""
    }
  },
  "Web/sites::FunctionApp": {
    "$id": "default.templates.web/sites::functionapp",
    "properties": {
      "name": "Web/sites::FunctionApp",
      "shortName": "func",
      "lengthMax": 60,
      "lengthMin": 2,
      "casing": "none",
      "validText": "Contains alphanumerics and hyphens.",
      "invalidText": "Can't start or end with hyphen.",
      "invalidCharacters": "",
      "invalidCharactersStart": "-",
      "invalidCharactersEnd": "-",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9][a-zA-Z0-9-]{0,58}[a-zA-Z0-9]$",
      "staticValue": ""
    }
  },
  "Web/sites::StaticWebApp": {
    "$id": "default.templates.web/sites::staticwebapp",
    "properties": {
      "name": "Web/sites::StaticWebApp",
      "shortName": "stapp",
      "lengthMax": 60,
      "lengthMin": 2,
      "casing": "none",
      "validText": "Contains alphanumerics and hyphens.",
      "invalidText": "Can't start or end with hyphen.",
      "invalidCharacters": "",
      "invalidCharactersStart": "-",
      "invalidCharactersEnd": "-",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9][a-zA-Z0-9-]{0,58}[a-zA-Z0-9]$",
      "staticValue": ""
    }
  },
  "Web/sites::WebApp": {
    "$id": "default.templates.web/sites::webapp",
    "properties": {
      "name": "Web/sites::WebApp",
      "shortName": "app",
      "lengthMax": 60,
      "lengthMin": 2,
      "casing": "none",
      "validText": "Contains alphanumerics and hyphens.",
      "invalidText": "Can't start or end with hyphen.",
      "invalidCharacters": "",
      "invalidCharactersStart": "-",
      "invalidCharactersEnd": "-",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9][a-zA-Z0-9-]{0,58}[a-zA-Z0-9]$",
      "staticValue": ""
    }
  },
  "Web/sites/slots": {
    "$id": "default.templates.web/sites/slots",
    "properties": {
      "name": "Web/sites/slots",
      "shortName": "slot",
      "lengthMax": 60,
      "lengthMin": 2,
      "casing": "none",
      "validText": "Alphanumerics and hyphens.",
      "invalidText": "",
      "invalidCharacters": "",
      "invalidCharactersStart": "",
      "invalidCharactersEnd": "",
      "invalidCharactersConsecutive": "",
      "regex": "^[a-zA-Z0-9-]{2,60}$",
      "staticValue": ""
    }
  }
}